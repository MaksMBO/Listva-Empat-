{"version":3,"file":"static/js/529.eaf553eb.chunk.js","mappings":"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","sources":["assets/images/header/Logo.svg","assets/images/header/basket.svg","assets/images/header/phone.svg","assets/images/header/close.svg","assets/images/header/catalog.svg","assets/images/header/advantages.svg","assets/images/header/review.svg","assets/images/header/contact.svg","assets/images/header/burgerButton.svg","components/Header/index.jsx","components/Landing/mainPage.jsx","assets/images/landig/person.svg","assets/images/landig/bouquet.svg","assets/images/landig/geo.svg","assets/images/landig/delivery.svg","components/Landing/advantages.jsx","assets/images/landig/catalog-page-prev.svg","assets/images/landig/catalog-page-next.svg","components/Landing/catalogMain.jsx","components/Landing/act.jsx","components/Landing/response.jsx","assets/images/footer/LystvaLogo.svg","assets/images/footer/PayPal.svg","assets/images/footer/Visa_2021.svg","assets/images/footer/Mastercard-logo.svg","assets/images/footer/telegram.svg","assets/images/footer/messenger.svg","assets/images/footer/viber.svg","components/Footer/index.jsx","pages/Landing/index.jsx"],"sourcesContent":["var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgLogo(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 72,\n    height: 60,\n    viewBox: \"0 0 72 60\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.44239 24.5299C4.98212 26.8643 0.517138 27.0102 0.790502 28.9798C2.0662 30.7306 6.80454 32.0437 11.3606 35.983C20.7462 44.1534 44.5289 59.5455 44.1645 57.6488C43.8911 56.1169 12.8186 33.9404 11.0873 29.1987C10.9962 29.1257 10.9962 29.1257 10.9962 29.0528C10.9962 29.0528 10.905 28.9798 10.905 28.9069C10.905 28.9069 10.905 28.8339 10.905 28.761C10.905 28.761 10.905 28.761 10.8139 28.761C10.8139 28.761 10.8139 28.688 10.8139 28.6151C10.8139 28.6151 10.7228 28.5421 10.7228 28.4692C10.7228 28.4692 10.7228 28.3962 10.7228 28.3233C10.6317 28.3233 10.6317 28.3233 10.6317 28.3233C10.6317 28.3233 10.6317 28.2503 10.6317 28.1774C9.26484 24.6029 20.8373 12.785 23.4799 8.91873C25.3023 6.29255 29.5851 0.456605 31.043 0.0918575C36.5103 -1.36713 36.0547 14.9006 28.2181 24.2381C26.0313 26.7914 21.2929 26.7184 21.5663 28.688C22.7509 30.4388 27.5803 31.7519 32.1365 35.6912C46.8981 48.6033 75.9661 68.8831 41.8864 39.0469C36.6925 34.597 32.3187 30.3659 31.7719 28.9069C31.7719 28.8339 31.7719 28.8339 31.7719 28.761C31.6808 28.688 31.6808 28.688 31.6808 28.6151C31.6808 28.5421 31.6808 28.5421 31.5897 28.4692C31.5897 28.4692 31.5897 28.3962 31.5897 28.3233C31.4985 28.3233 31.4985 28.2503 31.4985 28.1774C31.4985 28.1774 31.4074 28.1045 31.4074 28.0315C31.4074 28.0315 31.4074 27.9586 31.4074 27.8856C30.9519 26.7914 42.6154 9.13758 44.5289 7.02204C50.4519 0.310706 59.2907 4.76062 52.3655 11.1072C50.7252 12.6391 49.2673 15.1194 50.0874 18.6939C51.6365 25.1865 42.3421 28.2503 42.3421 28.3962C43.5267 30.147 49.0851 31.8978 53.6412 35.8371C58.2883 39.9223 59.0173 43.1321 67.036 48.3844C69.7698 50.208 74.7815 52.5424 70.0431 51.667C60.0197 49.7703 53.459 43.7157 52.9122 40.287C52.1833 35.3265 43.8 32.1167 42.1599 28.761C42.1599 28.688 42.1599 28.688 42.1599 28.6151C42.0686 28.5421 42.0686 28.5421 42.0686 28.4692C42.0686 28.3962 41.9775 28.3962 41.9775 28.3233C41.9775 28.2503 41.9775 28.2503 41.9775 28.1774C41.8864 28.1774 41.8864 28.1045 41.8864 28.0315C41.8864 28.0315 41.7953 27.9586 41.7953 27.8856C41.7953 27.8856 41.7953 27.8127 41.7953 27.7397C41.2486 26.4996 57.0126 3.30163 45.8046 7.53269C41.4308 9.13758 41.7953 20.2259 38.6061 24.0922C36.4191 26.6455 31.6808 26.5725 31.9541 28.5421C33.1387 30.2929 37.9682 31.606 42.5243 35.5453C47.0803 39.5575 75.9661 69.9044 47.9005 52.1776C44.6202 50.135 37.5126 44.4452 31.4985 39.1928C26.3046 34.7429 21.9307 30.5118 21.384 29.0528C21.384 28.9798 21.384 28.9798 21.384 28.9069C21.2929 28.8339 21.2929 28.8339 21.2929 28.761C21.2929 28.761 21.2929 28.688 21.2018 28.6151C21.2018 28.6151 21.2018 28.5421 21.2018 28.4692C21.1107 28.4692 21.1107 28.3962 21.1107 28.3233C21.1107 28.3233 21.1107 28.2503 21.0196 28.1774C21.0196 28.1774 21.0196 28.1045 21.0196 28.0315C19.7438 24.8947 37.5126 6.80319 26.6691 7.97039C23.2975 8.33513 26.578 11.1802 25.3934 15.5571C24.5732 18.3292 18.8326 20.08 17.8303 24.384C17.1013 27.5938 10.905 26.8643 11.1784 28.8339C12.4541 30.5847 17.1924 31.8978 21.7485 35.8371C38.3326 50.3539 47.0803 57.2841 45.349 59.3267C41.4308 63.6307 3.15967 45.9041 2.79518 45.6123C-2.30764 41.0895 1.24611 30.8036 0.69938 29.3446C0.608259 29.3446 0.608259 29.2716 0.608259 29.1987C0.608259 29.1987 0.517138 29.1257 0.517138 29.0528C0.517138 29.0528 0.517138 28.9798 0.517138 28.9069C0.426015 28.9069 0.426015 28.8339 0.426015 28.761C0.426015 28.761 0.334893 28.688 0.334893 28.6151C0.334893 28.6151 0.334893 28.5421 0.334893 28.4692C0.243772 28.4692 0.243772 28.3962 0.243772 28.3233C-0.394081 26.7914 1.33723 24.384 3.43303 21.8308C4.61763 20.3718 5.98446 18.7669 6.9868 17.3079C10.7228 14.4629 7.44239 24.5299 7.44239 24.5299Z\",\n    fill: \"#EBEBEB\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/Logo.3b3c8d8e4f22c77d703bf15870435ec8.svg\";\nexport { ForwardRef as ReactComponent };","var _g, _defs;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgBasket(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 22,\n    height: 22,\n    viewBox: \"0 0 22 22\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_1_227)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21.3951 6.54488C20.9551 6.04988 20.3501 5.71988 19.6901 5.71988H11.2201C10.9451 5.71988 10.6701 5.93988 10.6701 6.26988C10.6701 6.59988 10.9451 6.81988 11.2201 6.81988H19.6901C20.0201 6.81988 20.3501 6.98488 20.5701 7.20488C20.7901 7.47988 20.9001 7.80988 20.7901 8.13988L20.2951 10.8899H14.2451C13.9701 10.8899 13.6951 11.1099 13.6951 11.4399C13.6951 11.7699 13.9701 11.9899 14.2451 11.9899H20.1301L19.6351 14.6299C19.5801 15.0149 19.1951 15.2899 18.8101 15.2899H8.25007C7.86507 15.2899 7.53507 15.0149 7.42507 14.6299L5.28007 2.69488C5.22507 2.41988 5.00507 2.25488 4.73007 2.25488H0.495068C0.220068 2.25488 -0.0549316 2.47488 -0.0549316 2.80488C-0.0549316 3.13488 0.220068 3.35488 0.495068 3.35488H4.29007L6.38007 14.9049C6.49007 15.6749 7.04007 16.2249 7.75507 16.4449C7.48007 16.8299 7.26007 17.3249 7.26007 17.8749C7.26007 19.2499 8.36007 20.3499 9.73507 20.3499C11.1101 20.3499 12.2101 19.2499 12.2101 17.8749C12.2101 17.3799 12.0451 16.8849 11.7701 16.4999H15.1251C14.8501 16.8849 14.6851 17.3799 14.6851 17.8749C14.6851 19.2499 15.7851 20.3499 17.1601 20.3499C18.5351 20.3499 19.6351 19.2499 19.6351 17.8749C19.6351 17.3249 19.4701 16.8299 19.1951 16.4449C19.9101 16.2799 20.5151 15.6749 20.6801 14.9049L21.8901 8.41488C22.0001 7.75488 21.8351 7.09488 21.3951 6.54488ZM11.1101 17.8199C11.1101 18.5899 10.5051 19.1949 9.73507 19.1949C8.96507 19.1949 8.36007 18.5899 8.36007 17.8199C8.36007 17.0499 8.96507 16.4449 9.73507 16.4449C10.5051 16.4449 11.1101 17.0499 11.1101 17.8199ZM17.2151 19.1949C16.4451 19.1949 15.8401 18.5899 15.8401 17.8199C15.8401 17.0499 16.4451 16.4449 17.2151 16.4449C17.9851 16.4449 18.5901 17.0499 18.5901 17.8199C18.5901 18.5899 17.9851 19.1949 17.2151 19.1949Z\",\n    fill: \"#E5E5E5\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_1_227\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 22,\n    height: 22,\n    fill: \"white\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgBasket);\nexport default __webpack_public_path__ + \"static/media/basket.afb002008908e04a6e6744e07241aa22.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgPhone(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 17,\n    height: 18,\n    viewBox: \"0 0 17 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.9235 14.3467L16.8389 14.0768C16.6385 13.4461 15.9816 12.7883 15.3782 12.615L13.1447 11.969C12.5391 11.7945 11.6751 12.0291 11.2319 12.4982L10.4236 13.3541C7.48601 12.5136 5.18246 10.0745 4.38974 6.9647L5.1981 6.10879C5.64124 5.63959 5.86277 4.726 5.698 4.0847L5.08897 1.71872C4.9242 1.07859 4.30182 0.383079 3.70729 0.173223L3.45234 0.0824603C2.85668 -0.127396 2.00717 0.0848369 1.56407 0.554004L0.354936 1.83543C0.138925 2.06294 0.000867608 2.71368 0.000867608 2.71605C-0.0414225 6.78076 1.46385 10.6969 4.17933 13.5722C6.88814 16.4403 10.5729 18.0318 14.4006 17.9976C14.4206 17.9976 15.053 17.8538 15.269 17.6262L16.4782 16.346C16.9213 15.8768 17.1217 14.9774 16.9235 14.3467Z\",\n    fill: \"#EBEBEB\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgPhone);\nexport default __webpack_public_path__ + \"static/media/phone.1ad4f1cb43c13a5b3eda2082410abb8e.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgClose(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 22,\n    height: 22,\n    viewBox: \"0 0 22 22\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1 1L11 11L21 21\",\n    stroke: \"#E5E5E5\",\n    strokeWidth: 2\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1 21L11 11L21 1\",\n    stroke: \"#E5E5E5\",\n    strokeWidth: 2\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgClose);\nexport default __webpack_public_path__ + \"static/media/close.84eccaebec0f6cf02d8478bedde56268.svg\";\nexport { ForwardRef as ReactComponent };","var _g, _defs;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgCatalog(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 32,\n    height: 32,\n    viewBox: \"0 0 32 32\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_55_1430)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 14H19V16H8V14ZM8 19H21V21H8V19Z\",\n    fill: \"#E5E5E5\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M28 4H4C3.46957 4 2.96086 4.21071 2.58579 4.58579C2.21071 4.96086 2 5.46957 2 6V26C2 26.5304 2.21071 27.0391 2.58579 27.4142C2.96086 27.7893 3.46957 28 4 28H28C28.5304 28 29.0391 27.7893 29.4142 27.4142C29.7893 27.0391 30 26.5304 30 26V6C30 5.46957 29.7893 4.96086 29.4142 4.58579C29.0391 4.21071 28.5304 4 28 4ZM28 6V8H4V6H28ZM4 26V10H28V26H4Z\",\n    fill: \"#E5E5E5\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_55_1430\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 32,\n    height: 32,\n    fill: \"white\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCatalog);\nexport default __webpack_public_path__ + \"static/media/catalog.a88319ea01b76c3e86a4edcf53c2d4d8.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgAdvantages(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 32,\n    height: 32,\n    viewBox: \"0 0 32 32\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19.9051 11.4202L19.9044 11.4219L19.9042 11.4224L19.9041 11.4227C19.904 11.4228 19.904 11.4229 19.904 11.4227L19.2837 12.8854L20.8716 12.8113C25.5803 12.5916 27.8084 12.8149 28.8559 13.2008C29.3301 13.3754 29.4461 13.5427 29.4884 13.6197C29.5555 13.7417 29.5917 13.9186 29.6139 14.34L29.6139 14.34L29.6142 14.3455C29.6461 14.8935 29.3414 15.1662 28.7725 15.486C28.7397 15.5044 28.6985 15.5271 28.6535 15.5517C28.5528 15.607 28.4334 15.6725 28.3484 15.7241C28.2777 15.767 28.1843 15.827 28.0933 15.9024C28.0113 15.9704 27.864 16.1049 27.7596 16.314C27.6351 16.5633 27.5919 16.8833 27.7136 17.2039C27.8168 17.4758 28.0006 17.6439 28.1123 17.7309C28.3286 17.8993 28.6063 18.0142 28.8427 18.1011C29.6161 18.3852 29.7115 18.6257 29.7217 18.6514L29.722 18.6523C29.7353 18.6853 29.7484 18.7395 29.7484 18.8552C29.7484 18.9153 29.7452 18.9803 29.7398 19.0679C29.7392 19.0773 29.7386 19.0872 29.7379 19.0975C29.7345 19.1516 29.7304 19.218 29.7276 19.2868C29.7177 19.3052 29.7013 19.3331 29.6756 19.3712C29.585 19.5058 29.4522 19.6634 29.269 19.875C29.2562 19.8898 29.243 19.905 29.2296 19.9205C29.0707 20.1037 28.876 20.3282 28.7149 20.5518C28.5527 20.7769 28.33 21.1249 28.2629 21.5398C28.1675 22.1263 28.4386 22.5555 28.6582 22.8036C28.761 22.9198 28.872 23.0196 28.954 23.0916C28.989 23.1223 29.0188 23.1481 29.0461 23.1717C29.0949 23.214 29.1357 23.2494 29.1837 23.2933C29.4081 23.4991 29.5333 23.6574 29.5254 24.0216C29.5118 24.4078 29.3289 24.6367 29.1051 24.8024C28.9867 24.89 28.8646 24.9517 28.7709 24.9909C28.7253 25.01 28.6899 25.0224 28.6697 25.029C28.663 25.0312 28.6581 25.0327 28.6553 25.0335L27.2343 25.3973L28.1049 26.5896C28.4689 27.0882 28.4228 27.4474 28.3451 27.6805C28.2991 27.8186 28.231 27.9353 28.1728 28.0179C28.1444 28.0581 28.1209 28.0866 28.1077 28.1019C28.1043 28.1058 28.1017 28.1087 28.1 28.1106L27.9988 28.2108L27.9698 28.2661C27.9608 28.2715 27.9499 28.2779 27.9368 28.285C27.8323 28.3419 27.6561 28.4132 27.3894 28.4884C26.8581 28.6381 26.109 28.7644 25.1847 28.8647C23.3453 29.0643 20.9658 29.1453 18.5897 29.1624C16.22 29.1795 13.8807 29.1329 12.1319 29.082C11.3468 29.0591 10.6817 29.0353 10.1875 29.0162V14.999C11.4423 14.7481 12.6511 14.0456 13.6983 13.0758C15.0321 11.8404 16.1773 10.1087 16.9259 8.0705C17.5991 6.24764 18.0544 4.74866 18.3424 3.70082C18.4157 3.43407 18.4782 3.19648 18.5306 2.99018C19.4675 3.24617 20.01 3.71806 20.3432 4.24607C20.8005 4.97075 20.9615 5.95759 20.9119 7.06128C20.863 8.15065 20.614 9.24199 20.3682 10.0769C20.2465 10.4905 20.1281 10.8326 20.0411 11.0691C19.9976 11.1873 19.9621 11.2786 19.9381 11.3389C19.9261 11.3691 19.917 11.3914 19.9112 11.4054L19.9051 11.4202ZM28.0048 28.2422C28.0049 28.2422 28.0038 28.2432 28.0013 28.2452C28.0035 28.2431 28.0048 28.2422 28.0048 28.2422Z\",\n    stroke: \"#E5E5E5\",\n    strokeWidth: 2\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2.4375 14.6999H3.0375V14.6874H4.6125V29.3624H2.4375C2.11887 29.3624 1.85 29.0935 1.85 28.7749V15.2874C1.85 14.9688 2.11887 14.6999 2.4375 14.6999Z\",\n    stroke: \"#E5E5E5\",\n    strokeWidth: 1.2\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgAdvantages);\nexport default __webpack_public_path__ + \"static/media/advantages.6a5e025a34eea3028ce5af9c869d24a6.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgReview(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 38,\n    height: 38,\n    viewBox: \"0 0 38 38\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19.95 22.7998C21.524 22.7998 22.8 24.0758 22.8 25.6498V26.5998C22.8 30.3455 19.267 34.1998 13.3 34.1998C7.33312 34.1998 3.80005 30.3455 3.80005 26.5998V25.6498C3.80005 24.0758 5.07603 22.7998 6.65005 22.7998H19.95ZM19.95 24.6998H6.65005C6.12538 24.6998 5.70005 25.1252 5.70005 25.6498V26.5998C5.70005 29.3312 8.42115 32.2998 13.3 32.2998C18.1789 32.2998 20.9 29.3312 20.9 26.5998V25.6498C20.9 25.1252 20.4746 24.6998 19.95 24.6998ZM13.3 10.4498C16.1857 10.4498 18.525 12.7891 18.525 15.6748C18.525 18.5605 16.1857 20.8998 13.3 20.8998C10.4144 20.8998 8.07505 18.5605 8.07505 15.6748C8.07505 12.7891 10.4144 10.4498 13.3 10.4498ZM30.4 3.7998C32.4034 3.7998 34.0446 5.34998 34.1896 7.31621L34.2 7.5998V11.3998C34.2 13.4031 32.6498 15.0443 30.6837 15.1894L30.4 15.1998H27.5481L25.2719 18.2394C24.2661 19.5812 22.2234 19.0376 21.8962 17.5259L21.8626 17.3138L21.8516 17.0998L21.85 15.0763L21.7026 15.0389C20.3244 14.6238 19.2759 13.4471 19.0468 11.9979L19.0105 11.6834L19 11.3998V7.5998C19 5.59652 20.5503 3.95528 22.5164 3.81024L22.8 3.7998H30.4ZM13.3 12.3498C11.4637 12.3498 9.97505 13.8385 9.97505 15.6748C9.97505 17.5112 11.4637 18.9998 13.3 18.9998C15.1364 18.9998 16.625 17.5112 16.625 15.6748C16.625 13.8385 15.1364 12.3498 13.3 12.3498ZM30.4 5.6998H22.8C21.8257 5.6998 21.0226 6.43328 20.9128 7.37823L20.9 7.5998V11.3998C20.9 12.3742 21.6334 13.1773 22.5785 13.287L22.8 13.2998H23.7516V17.0998L26.6 13.2998H30.4C31.3744 13.2998 32.1775 12.5663 32.2873 11.6214L32.3 11.3998V7.5998C32.3 6.62541 31.5666 5.82234 30.6216 5.71259L30.4 5.6998Z\",\n    fill: \"#E5E5E5\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgReview);\nexport default __webpack_public_path__ + \"static/media/review.c9fea4311d2f0302c3c28b2cabd2cfaa.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgContact(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 35,\n    height: 35,\n    viewBox: \"0 0 35 35\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M27.3438 5.8335C29.9614 5.8335 32.0834 7.95547 32.0834 10.5731V24.434C32.0834 27.0515 29.9614 29.1735 27.3438 29.1735H7.65633C5.03873 29.1735 2.91675 27.0515 2.91675 24.434V10.5731C2.91675 8.04574 4.8949 5.98042 7.38739 5.84099L7.65633 5.8335H27.3438ZM27.3438 8.021H7.65633L7.44702 8.02945C6.13545 8.13593 5.10425 9.23408 5.10425 10.5731V24.434C5.10425 25.8434 6.24685 26.986 7.65633 26.986H27.3438C28.7533 26.986 29.8959 25.8434 29.8959 24.434V10.5731C29.8959 9.1636 28.7533 8.021 27.3438 8.021ZM13.4934 18.2293C14.0975 18.2293 14.5872 18.719 14.5872 19.3231V20.1721C14.5872 22.0271 13.1748 22.9689 10.9395 22.9689C8.70401 22.9689 7.29175 22.0262 7.29175 20.1704V19.3231C7.29175 18.719 7.78144 18.2293 8.3855 18.2293H13.4934ZM15.7989 18.2273L17.8647 18.2293C18.4687 18.2293 18.9584 18.719 18.9584 19.3231V19.8083C18.9584 21.2134 17.8428 21.8752 16.224 21.8752C16.0547 21.8752 15.8908 21.8679 15.7332 21.8533C15.8965 21.4611 15.9984 21.0236 16.0326 20.5418L16.0455 20.1721V19.3231C16.0455 18.9308 15.957 18.5594 15.7989 18.2273ZM22.2392 18.2293H26.6147C27.2187 18.2293 27.7084 18.719 27.7084 19.3231C27.7084 19.8768 27.2969 20.3344 26.7631 20.4069L26.6147 20.4168H22.2392C21.6352 20.4168 21.1455 19.9271 21.1455 19.3231C21.1455 18.7694 21.5569 18.3117 22.0908 18.2392L22.2392 18.2293ZM10.9386 12.396C12.1473 12.396 13.1272 13.3758 13.1272 14.5845C13.1272 15.7932 12.1473 16.773 10.9386 16.773C9.72992 16.773 8.75008 15.7932 8.75008 14.5845C8.75008 13.3758 9.72992 12.396 10.9386 12.396ZM16.5813 13.1284C17.5863 13.1284 18.4009 13.9431 18.4009 14.9481C18.4009 15.953 17.5863 16.7676 16.5813 16.7676C15.5764 16.7676 14.7616 15.953 14.7616 14.9481C14.7616 13.9431 15.5764 13.1284 16.5813 13.1284ZM22.2392 13.8543H26.6147C27.2187 13.8543 27.7084 14.344 27.7084 14.9481C27.7084 15.5018 27.2969 15.9594 26.7631 16.0319L26.6147 16.0418H22.2392C21.6352 16.0418 21.1455 15.5521 21.1455 14.9481C21.1455 14.3944 21.5569 13.9367 22.0908 13.8643L22.2392 13.8543Z\",\n    fill: \"#E5E5E5\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgContact);\nexport default __webpack_public_path__ + \"static/media/contact.4ab29bbf5e72f25a6ff43cdca2632b2e.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgBurgerButton(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 30,\n    height: 32,\n    viewBox: \"0 0 30 32\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 8L30 8\",\n    stroke: \"#E5E5E5\",\n    strokeWidth: 2\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 16H30\",\n    stroke: \"#E5E5E5\",\n    strokeWidth: 2\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 24H30\",\n    stroke: \"#E5E5E5\",\n    strokeWidth: 2\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgBurgerButton);\nexport default __webpack_public_path__ + \"static/media/burgerButton.dc49d9270f88ec123675a06a4606b6ff.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useEffect, useRef } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport i18n from \"i18next\";\n\nimport { ReactComponent as LogoImage } from \"../../assets/images/header/Logo.svg\";\nimport { ReactComponent as BasketImage } from \"../../assets/images/header/basket.svg\";\nimport { ReactComponent as PhoneImage } from \"../../assets/images/header/phone.svg\";\nimport { ReactComponent as CloseImage } from \"../../assets/images/header/close.svg\";\nimport { ReactComponent as CatalogImage } from \"../../assets/images/header/catalog.svg\";\nimport { ReactComponent as AdvantagesImage } from \"../../assets/images/header/advantages.svg\";\nimport { ReactComponent as ReviewImage } from \"../../assets/images/header/review.svg\";\nimport { ReactComponent as ContacsImage } from \"../../assets/images/header/contact.svg\";\n\nimport { ReactComponent as BurgerButtonImage } from \"../../assets/images/header/burgerButton.svg\";\n\nimport \"../../styles/headerStyled.scss\";\n\nconst iconComponents = {\n  CatalogImage: CatalogImage,\n  AdvantagesImage: AdvantagesImage,\n  ReviewImage: ReviewImage,\n  ContacsImage: ContacsImage,\n};\n\nconst HeaderBurgerNavs = (props) => {\n  const navLinks = props.t(\"landing.navLinks\", { returnObjects: true });\n\n  return (\n    <nav>\n      <ul className=\"header-burger__nav-list\">\n        {navLinks.map(({ icon, text }, index) => {\n          const IconComponent = iconComponents[icon];\n\n          return (\n            <li className=\"header-burger__nav-item\" key={index}>\n              <a className=\"header-burger__nav-link\">\n                {IconComponent && (\n                  <IconComponent className=\"header-burger__nav-link-img\" />\n                )}\n                <span className=\"header-burger__nav-link-text\">{text}</span>\n              </a>\n            </li>\n          );\n        })}\n      </ul>\n    </nav>\n  );\n};\n\nexport default function Header({\n  catalogRef,\n  reviewRef,\n  contactsRef,\n  advantagesRef,\n}) {\n  const headerRef = useRef(null);\n\n  const scrollToElement = (elementRef) => {\n    let elem;\n    switch (elementRef) {\n      case \"catalog\":\n        elem = catalogRef;\n        break;\n      case \"review\":\n        elem = reviewRef;\n        break;\n      case \"contacts\":\n        elem = contactsRef;\n        break;\n      case \"advantages\":\n        elem = advantagesRef;\n        break;\n      default:\n        break;\n    }\n    console.log(elem);\n    if (elem && elem.current) {\n      const rect = elem.current.getBoundingClientRect();\n      console.log(\"Top position:\", elem.current.offsetHeight);\n      window.scrollTo({\n        top: window.pageYOffset + rect.y - 0.5 * headerRef.current.offsetHeight,\n        behavior: \"smooth\",\n      });\n    }\n  };\n\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleMenu = () => {\n    document.body.style.overflow = isOpen ? \"auto\" : \"hidden\";\n    setIsOpen(!isOpen);\n  };\n\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const quantityInBasket = useSelector((state) => state.quantityInBasket);\n\n  const changeLanguage = (lng) => {\n    i18n.changeLanguage(lng);\n    dispatch({ type: \"CHANGE_LANG\", payload: lng });\n  };\n\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.innerWidth > 740) {\n        setIsOpen(false);\n        document.body.style.overflow = \"auto\";\n      }\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  return (\n    <>\n      {!isOpen ? (\n        <header className=\"header\" ref={headerRef}>\n          <div className=\"header__container\">\n            <div className=\"header__logo-container\">\n              <a className=\"header__logo-link\">\n                <LogoImage className=\"header__logo\" />\n              </a>\n              <div className=\"header__logo-text\">\n                <span className=\"header__title\">LISTVA</span>\n                <span className=\"header__subtitle\">\n                  {t(\"landing.logoSubtitle.text\")}\n                </span>\n              </div>\n            </div>\n            <div className=\"header__contact\">\n              <div className=\"header__phone-container\">\n                <PhoneImage className=\"header__phone\" />\n                <a href=\"tel:068 999 99 99\" className=\"header__phone-text\">\n                  +38 (068) 999 99 99\n                </a>\n              </div>\n              <p className=\"header__languages\">\n                <a\n                  onClick={() => changeLanguage(\"uk\")}\n                  className=\"header__language-link\"\n                >\n                  UA\n                </a>\n                |\n                <a\n                  onClick={() => changeLanguage(\"en\")}\n                  className=\"header__language-link\"\n                >\n                  EN\n                </a>\n              </p>\n            </div>\n          </div>\n          <div className=\"header__navigation\">\n            <nav>\n              <ul className=\"header__nav-list\">\n                {t(\"landing.navLinks\", { returnObjects: true }).map(\n                  (link, index) => (\n                    <li\n                      className=\"header__nav-item\"\n                      key={index}\n                      onClick={() => scrollToElement(link.to)}\n                    >\n                      <a className=\"header__nav-link\">{link.text}</a>\n                    </li>\n                  )\n                )}\n              </ul>\n            </nav>\n            <div className=\"header__currency\">\n              <p className=\"header__currency-text\">UAH</p>\n              <a className=\"header__basket-link\">\n                <BasketImage className=\"header__basket\" />\n                <div className=\"header__circle\">{quantityInBasket}</div>\n              </a>\n            </div>\n          </div>\n          <BurgerButtonImage\n            onClick={toggleMenu}\n            className=\"header__burger-button\"\n          />\n        </header>\n      ) : (\n        <header className=\"header-burger\">\n          <div className=\"header-burger__close\">\n            <CloseImage\n              className=\"header-burger__img-close\"\n              onClick={toggleMenu}\n            />\n          </div>\n          <div className=\"header-burger__link\">\n            <HeaderBurgerNavs t={t} />\n            <li className=\"header-burger__nav-item\">\n              <a className=\"header-burger__nav-link\">\n                <BasketImage className=\"header-burger__nav-link-img\" />\n                <div className=\"header-burger__circle\">{quantityInBasket}</div>\n                <span className=\"header-burger__nav-link-text\">\n                  {t(\"landing.basket\")}\n                </span>\n              </a>\n            </li>\n          </div>\n          <div className=\"header-burger__contact\">\n            <div className=\"header-burger__phone-container\">\n              <PhoneImage\n                onClick={toggleMenu}\n                className=\"header-burger__phone\"\n              />\n              <a href=\"tel:068 999 99 99\" className=\"header-burger__phone-text\">\n                +38 (068) 999 99 99\n              </a>\n            </div>\n            <p className=\"header-burger__languages\">\n              <a\n                onClick={() => changeLanguage(\"uk\")}\n                className=\"header-burger__language-link\"\n              >\n                UA\n              </a>\n              |\n              <a\n                onClick={() => changeLanguage(\"en\")}\n                className=\"header-burger__language-link\"\n              >\n                EN\n              </a>\n            </p>\n          </div>\n        </header>\n      )}\n    </>\n  );\n}\n","import { useTranslation } from \"react-i18next\";\nimport \"../../styles/landing-main.scss\";\n\nexport default function MainPage() {\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"landing-main-page\">\n      <p className=\"landing-main-page__title\">{t(\"MainPage.title\")}</p>\n      <p className=\"landing-main-page__subtitle\">{t(\"MainPage.subtitle\")}</p>\n      <button className=\"landing-main-page__button\">\n        {t(\"MainPage.button\")}\n      </button>\n      <div className=\"landing-main-page__line\"></div>\n    </div>\n  );\n}\n","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18, _path19, _circle;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgPerson(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 56,\n    height: 56,\n    viewBox: \"0 0 56 56\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M31.9192 24.9944C33.2158 26.0196 34.2319 27.5036 34.4453 29.1718C34.5857 31.2952 34.237 33.0476 32.8061 34.7035C32.5218 35.0058 32.2376 35.2693 31.9062 35.5195C31.8418 35.5195 31.7773 35.5195 31.7109 35.5195C31.7109 35.5839 31.7109 35.6484 31.7109 35.7148C31.7925 35.7241 31.8741 35.7334 31.9581 35.743C33.7323 36.1066 35.4206 37.6132 36.4194 39.0542C37.5163 40.7822 37.977 42.4835 37.9853 44.5222C37.9883 44.7083 37.9883 44.7083 37.9914 44.8981C37.9922 45.0766 37.9922 45.0766 37.993 45.2588C37.9939 45.3669 37.9948 45.4751 37.9957 45.5865C37.9556 45.9144 37.8979 46.0283 37.6679 46.2617C37.4234 46.3113 37.4234 46.3113 37.1284 46.3122C36.9626 46.3141 36.9626 46.3141 36.7936 46.3159C36.6742 46.3152 36.5549 46.3144 36.432 46.3136C36.3095 46.3139 36.1871 46.3143 36.0609 46.3147C35.8018 46.315 35.5428 46.3144 35.2837 46.3126C34.9517 46.3104 34.6198 46.3117 34.2877 46.314C33.971 46.3157 33.6542 46.3145 33.3375 46.3136C33.2182 46.3143 33.0988 46.3151 32.9759 46.3159C32.8654 46.3147 32.7549 46.3135 32.6411 46.3122C32.5438 46.3119 32.4464 46.3116 32.3461 46.3113C32.1015 46.2617 32.1015 46.2617 31.9236 46.0815C31.7672 45.7954 31.7684 45.6067 31.8086 45.2851C31.93 45.0743 31.93 45.0743 32.1015 44.8945C32.3036 44.8475 32.3036 44.8475 32.5382 44.8501C32.6262 44.8502 32.7141 44.8502 32.8047 44.8502C32.8994 44.8522 32.994 44.8543 33.0914 44.8563C33.2371 44.8572 33.2371 44.8572 33.3858 44.858C33.6963 44.8602 34.0067 44.8651 34.3171 44.8701C34.5275 44.872 34.7379 44.8738 34.9483 44.8754C35.4642 44.8797 35.9801 44.8863 36.4961 44.8945C36.4837 44.6341 36.4704 44.3739 36.4568 44.1136C36.4534 44.041 36.45 43.9684 36.4465 43.8937C36.3538 42.1785 35.7012 40.5099 34.5429 39.2304C34.4597 39.1337 34.4597 39.1337 34.3747 39.0351C33.2804 37.8455 31.62 36.9991 30.0044 36.8669C29.7458 36.8579 29.4878 36.8545 29.2291 36.8539C29.1341 36.8532 29.0391 36.8526 28.9412 36.8519C28.7411 36.8509 28.541 36.8504 28.341 36.8505C28.0394 36.8501 27.738 36.8465 27.4365 36.8428C25.3247 36.8306 23.5536 37.2882 21.9453 38.7421C21.8762 38.8033 21.8071 38.8645 21.7359 38.9275C20.0399 40.5165 19.6056 42.6792 19.5039 44.8945C19.5583 44.8936 19.6127 44.8927 19.6687 44.8919C20.2343 44.8832 20.7998 44.8773 21.3653 44.873C21.5765 44.8711 21.7876 44.8684 21.9988 44.865C22.302 44.8603 22.6052 44.8581 22.9085 44.8563C23.0031 44.8543 23.0977 44.8523 23.1952 44.8502C23.3271 44.8502 23.3271 44.8502 23.4617 44.8501C23.5392 44.8493 23.6166 44.8484 23.6963 44.8475C23.8984 44.8945 23.8984 44.8945 24.0699 45.0743C24.2347 45.3603 24.232 45.5458 24.1914 45.871C24.0763 46.0815 24.0763 46.0815 23.8984 46.2617C23.6538 46.3113 23.6538 46.3113 23.3588 46.3122C23.1931 46.3141 23.1931 46.3141 23.024 46.3159C22.9047 46.3152 22.7854 46.3144 22.6624 46.3136C22.54 46.3139 22.4176 46.3143 22.2914 46.3147C22.0323 46.315 21.7733 46.3144 21.5142 46.3126C21.1821 46.3104 20.8502 46.3117 20.5182 46.314C20.2014 46.3157 19.8847 46.3145 19.568 46.3136C19.4486 46.3143 19.3293 46.3151 19.2064 46.3159C19.0959 46.3147 18.9854 46.3135 18.8716 46.3122C18.7742 46.3119 18.6769 46.3116 18.5766 46.3113C18.332 46.2617 18.332 46.2617 18.1542 46.0802C18.0021 45.8039 18.0011 45.6009 18.0001 45.2863C17.9995 45.1716 17.9989 45.0569 17.9983 44.9388C17.9997 44.8174 18.001 44.696 18.0024 44.571C18.0033 44.4472 18.0043 44.3234 18.0052 44.1958C18.0454 41.7011 18.9617 39.5209 20.7051 37.7301C21.5725 36.9082 23.0413 35.7148 24.289 35.7148C24.289 35.6503 24.289 35.5859 24.289 35.5195C24.232 35.4929 24.175 35.4664 24.1162 35.439C22.9341 34.8158 22.1431 33.4306 21.75 32.1992C21.2515 30.4352 21.4829 28.5772 22.3287 26.9707C23.1999 25.464 24.6242 24.421 26.2788 23.9106C28.2443 23.4787 30.2745 23.8275 31.9192 24.9944ZM24.2486 26.8288C23.2133 28.1293 22.8473 29.4852 23.0195 31.125C23.2553 32.4295 23.9597 33.542 25.018 34.332C26.2616 35.1759 27.5702 35.4702 29.0479 35.2055C30.3641 34.8895 31.3993 34.166 32.1992 33.0781C32.9649 31.7912 33.1777 30.4777 32.9167 29.0086C32.5755 27.7841 31.8635 26.7104 30.7632 26.0436C28.635 24.8516 25.9916 24.9158 24.2486 26.8288Z\",\n    fill: \"#A47087\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M27.2494 44.8556C27.3705 44.8553 27.4916 44.8549 27.6163 44.8545C27.8063 44.8562 27.8063 44.8562 28.0001 44.8579C28.1267 44.8568 28.2534 44.8557 28.3839 44.8545C28.505 44.8549 28.6261 44.8552 28.7508 44.8556C28.862 44.856 28.9731 44.8563 29.0877 44.8566C29.3673 44.8945 29.3673 44.8945 29.5499 45.0316C29.6875 45.226 29.6996 45.3414 29.6969 45.5781C29.698 45.6778 29.698 45.6778 29.6992 45.7796C29.6469 46.0336 29.5749 46.1059 29.3673 46.2617C29.0877 46.2996 29.0877 46.2996 28.7508 46.3006C28.6297 46.301 28.5086 46.3014 28.3839 46.3018C28.1939 46.3001 28.1939 46.3001 28.0001 46.2984C27.8735 46.2995 27.7468 46.3006 27.6163 46.3018C27.4952 46.3014 27.3741 46.301 27.2494 46.3006C27.1382 46.3003 27.027 46.3 26.9125 46.2996C26.6329 46.2617 26.6329 46.2617 26.4503 46.1246C26.3127 45.9303 26.3006 45.8148 26.3033 45.5781C26.3026 45.5117 26.3018 45.4452 26.301 45.3767C26.4077 44.8579 26.7858 44.857 27.2494 44.8556Z\",\n    fill: \"#A47087\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M37.7657 20.2851C37.961 20.4438 37.961 20.4438 38.0587 20.6757C38.05 21.2252 37.9027 21.4908 37.5297 21.8659C37.4727 21.9203 37.4156 21.9747 37.3568 22.0307C37.3016 22.0873 37.2464 22.144 37.1895 22.2024C36.8471 22.5381 36.6058 22.7165 36.1055 22.7265C35.8309 22.6288 35.8309 22.6288 35.6172 22.4335C35.4952 22.1222 35.4952 22.1222 35.5196 21.7499C35.7099 21.451 35.9501 21.215 36.2032 20.9687C36.2663 20.9033 36.3293 20.838 36.3943 20.7707C36.8712 20.2798 37.0534 20.1226 37.7657 20.2851Z\",\n    fill: \"#A47087\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19.1133 20.2852C19.3607 20.4625 19.5673 20.6709 19.7786 20.8894C19.8357 20.9446 19.8927 20.9998 19.9516 21.0567C20.29 21.399 20.4712 21.6379 20.4805 22.1406C20.3828 22.4153 20.3828 22.4153 20.1875 22.6289C19.8762 22.751 19.8762 22.751 19.5039 22.7266C19.2048 22.5362 18.9703 22.2949 18.7227 22.043C18.6573 21.9856 18.592 21.9282 18.5247 21.869C18.208 21.5841 18.056 21.4149 17.9292 20.9993C17.9426 20.6451 17.9772 20.5239 18.2344 20.2852C18.5947 20.1651 18.7484 20.1782 19.1133 20.2852Z\",\n    fill: \"#A47087\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.9355 29.5236C15.0346 29.5232 15.1337 29.5229 15.2358 29.5225C15.3391 29.5236 15.4425 29.5247 15.5489 29.5259C15.6523 29.5248 15.7556 29.5236 15.8621 29.5225C16.0107 29.523 16.0107 29.523 16.1623 29.5236C16.2984 29.5241 16.2984 29.5241 16.4372 29.5246C16.714 29.5693 16.7979 29.6346 16.965 29.8555C17.0813 30.1712 17.0839 30.2956 16.9467 30.6062C16.7516 30.855 16.6727 30.9209 16.379 31.0274C16.1 31.0487 15.8338 31.0591 15.5551 31.0579C15.4451 31.0602 15.4451 31.0602 15.3328 31.0626C14.8825 31.063 14.6013 31.0165 14.2306 30.7344C14.0477 30.5515 14.1099 30.2952 14.1009 30.0516C14.1786 29.5763 14.5075 29.5252 14.9355 29.5236Z\",\n    fill: \"#A47087\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M39.8379 29.5236C39.937 29.5232 40.036 29.5229 40.1381 29.5225C40.2415 29.5236 40.3448 29.5247 40.4513 29.5259C40.5546 29.5248 40.658 29.5236 40.7645 29.5225C40.9131 29.523 40.9131 29.523 41.0647 29.5236C41.2007 29.5241 41.2007 29.5241 41.3395 29.5246C41.615 29.5691 41.7017 29.635 41.8673 29.8555C41.9216 30.1196 41.9089 30.3709 41.8673 30.6367C41.6904 30.8979 41.5863 30.9257 41.2814 31.0274C41.0074 31.0419 40.7375 31.0499 40.4635 31.0518C40.3897 31.0538 40.316 31.0558 40.24 31.0579C39.7868 31.061 39.5059 31.0195 39.1329 30.7344C38.9501 30.5515 39.0122 30.2952 39.0032 30.0516C39.0809 29.5763 39.4098 29.5252 39.8379 29.5236Z\",\n    fill: \"#A47087\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M28 16.3424C28.0997 16.3412 28.0997 16.3412 28.2014 16.3401C28.4517 16.3916 28.5267 16.4715 28.6836 16.672C28.7485 17.0412 28.7334 17.4146 28.7324 17.7889C28.7352 17.8914 28.738 17.994 28.7408 18.0996C28.7427 18.849 28.7427 18.849 28.4555 19.1843C28.1215 19.344 27.9586 19.3249 27.6094 19.211C27.3863 19.0448 27.3234 18.961 27.2785 18.6833C27.2782 18.5926 27.2779 18.5019 27.2775 18.4084C27.2771 18.3093 27.2768 18.2103 27.2764 18.1082C27.2775 18.0048 27.2786 17.9015 27.2798 17.795C27.2787 17.6917 27.2775 17.5883 27.2764 17.4818C27.2769 17.3332 27.2769 17.3332 27.2775 17.1816C27.2778 17.0909 27.2782 17.0002 27.2785 16.9068C27.348 16.4765 27.5823 16.3376 28 16.3424Z\",\n    fill: \"#A47087\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M38.6811 14.8836C38.7927 14.88 38.9042 14.8763 39.0191 14.8726C39.3281 14.9141 39.3281 14.9141 39.5604 15.09C39.7187 15.3048 39.7187 15.3048 39.7737 15.6466C39.7187 15.9884 39.7187 15.9884 39.5478 16.2264C39.0688 16.4567 38.5811 16.4588 38.0586 16.379C37.7606 16.2053 37.6849 16.1379 37.5764 15.8053C37.5692 15.4438 37.6448 15.295 37.8633 15.0118C38.1379 14.8745 38.375 14.8902 38.6811 14.8836Z\",\n    fill: \"#A47087\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.6314 36.9844C13.0701 37.1143 13.0701 37.1143 13.254 37.375C13.2998 37.6889 13.2998 37.6889 13.3028 38.0525C13.3058 38.1722 13.3089 38.2919 13.312 38.4153C13.254 38.7422 13.254 38.7422 13.0289 38.9806C12.7657 39.1328 12.7657 39.1328 12.4117 39.1328C12.0406 39.0229 11.9759 38.9712 11.7891 38.6445C11.6989 38.0977 11.6947 37.6244 11.9906 37.1492C12.2774 36.9844 12.2774 36.9844 12.6314 36.9844Z\",\n    fill: \"#A47087\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.2539 13.6445C13.416 13.7532 13.416 13.7532 13.5469 13.9375C13.5892 14.2514 13.5892 14.2514 13.5896 14.615C13.5915 14.7347 13.5934 14.8544 13.5953 14.9778C13.5469 15.3047 13.5469 15.3047 13.3668 15.5397C13.1563 15.6953 13.1563 15.6953 12.8694 15.7502C12.5703 15.6953 12.5703 15.6953 12.2896 15.5183C11.9873 15.0649 12.008 14.6629 12.082 14.1328C12.2102 13.8276 12.2102 13.8276 12.375 13.6445C12.7217 13.529 12.9023 13.5566 13.2539 13.6445Z\",\n    fill: \"#A47087\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M40.5611 12.7595C40.9293 12.8754 40.9972 12.9283 41.1837 13.2539C41.274 13.8008 41.2782 14.2741 40.9823 14.7493C40.6954 14.9141 40.6954 14.9141 40.3414 14.9141C39.9073 14.7854 39.9073 14.7854 39.7189 14.5234C39.6282 13.9506 39.6145 13.4246 39.9203 12.9243C40.2071 12.7656 40.2071 12.7656 40.5611 12.7595Z\",\n    fill: \"#A47087\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.1562 10.0312C13.3667 10.1868 13.3667 10.1868 13.5468 10.4218C13.5952 10.7487 13.5952 10.7487 13.5895 11.1115C13.5894 11.2315 13.5893 11.3515 13.5891 11.4751C13.5468 11.789 13.5468 11.789 13.4152 11.9725C13.166 12.1416 12.9669 12.1677 12.6679 12.1796C12.3932 12.0576 12.3932 12.0576 12.1796 11.8867C12.0287 11.434 12.0213 10.9917 12.0819 10.5195C12.3772 10.0766 12.6261 9.9297 13.1562 10.0312Z\",\n    fill: \"#A47087\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.0585 40.6953C13.2885 41.0403 13.2858 41.2077 13.2905 41.6169C13.2932 41.7276 13.296 41.8382 13.2989 41.9522C13.2538 42.2578 13.2538 42.2578 13.0776 42.4897C12.8632 42.6484 12.8632 42.6484 12.5214 42.7034C12.1796 42.6484 12.1796 42.6484 11.9416 42.4775C11.7125 42.001 11.6919 41.5072 11.789 40.9883C12.1866 40.4905 12.482 40.45 13.0585 40.6953Z\",\n    fill: \"#A47087\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M40.7931 16.3788C41.0841 16.595 41.1736 16.7108 41.2356 17.0716C41.2346 17.1813 41.2336 17.2911 41.2325 17.4042C41.2336 17.514 41.2346 17.6238 41.2356 17.7369C41.1736 18.0976 41.0841 18.2134 40.7931 18.4296C40.4153 18.4836 40.2073 18.5022 39.8959 18.2709C39.6648 17.9682 39.6666 17.7818 39.67 17.4042C39.6685 17.2396 39.6685 17.2396 39.667 17.0716C39.7791 16.4189 40.1798 16.2912 40.7931 16.3788Z\",\n    fill: \"#A47087\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M42.209 14.8715C42.3188 14.8716 42.4285 14.8717 42.5416 14.8718C42.8666 14.9174 43.0023 14.98 43.2344 15.2071C43.37 15.5417 43.3408 15.6725 43.21 16.0128C43.0391 16.2814 43.0391 16.2814 42.7461 16.379C42.2473 16.4261 41.816 16.4497 41.3606 16.2264C41.1836 15.9884 41.1836 15.9884 41.1287 15.6466C41.2342 14.9898 41.5823 14.8607 42.209 14.8715Z\",\n    fill: \"#A47087\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.3281 39.0778C14.447 39.0756 14.5658 39.0735 14.6882 39.0713C15.0117 39.1327 15.0117 39.1327 15.2501 39.3612C15.4023 39.621 15.4023 39.621 15.3962 39.9262C15.3041 40.2087 15.2484 40.327 15.0117 40.4999C14.5152 40.6654 14.0261 40.6829 13.5469 40.4633C13.2885 40.2534 13.2595 40.1605 13.2234 39.8285C13.2539 39.5233 13.2539 39.5233 13.4084 39.3124C13.7247 39.0717 13.934 39.0774 14.3281 39.0778Z\",\n    fill: \"#A47087\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.7638 39.0901C10.8299 39.0882 10.896 39.0862 10.9641 39.0842C11.2784 39.0845 11.4513 39.0912 11.6862 39.3091C11.8367 39.6225 11.8265 39.8648 11.7892 40.2071C11.6104 40.4625 11.505 40.4971 11.2032 40.5977C10.6718 40.6495 10.2725 40.6457 9.83606 40.3047C9.65318 40.1219 9.71535 39.8655 9.70636 39.6219C9.7384 39.4258 9.7384 39.4258 9.84063 39.2568C10.1323 39.0673 10.4274 39.0866 10.7638 39.0901Z\",\n    fill: \"#A47087\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.6272 12.1431C14.7472 12.1443 14.8671 12.1456 14.9907 12.1469C15.3047 12.1797 15.3047 12.1797 15.5977 12.375C15.6793 12.714 15.7302 12.9567 15.616 13.2905C15.5 13.4492 15.5 13.4492 15.3047 13.5469C15.0813 13.564 14.8573 13.573 14.6333 13.5774C14.5127 13.5811 14.3921 13.5847 14.2679 13.5885C13.9375 13.5469 13.9375 13.5469 13.7018 13.368C13.5469 13.1563 13.5469 13.1563 13.498 12.8633C13.6081 12.2033 14.0208 12.1291 14.6272 12.1431Z\",\n    fill: \"#A47087\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.0567 12.143C11.1559 12.1413 11.1559 12.1413 11.257 12.1396C11.5377 12.1412 11.7409 12.148 11.9791 12.304C12.1024 12.5057 12.1214 12.6276 12.1187 12.8632C12.1195 12.9297 12.1203 12.9961 12.121 13.0646C12.0821 13.2538 12.0821 13.2538 11.9791 13.4224C11.6881 13.6129 11.3927 13.5892 11.0567 13.5834C10.9906 13.5845 10.9246 13.5857 10.8565 13.5868C10.5758 13.5852 10.3726 13.5784 10.1343 13.4224C10.0111 13.2207 9.99204 13.0988 9.99472 12.8632C9.99397 12.7967 9.99321 12.7303 9.99243 12.6618C10.0313 12.4726 10.0313 12.4726 10.1343 12.304C10.4254 12.1135 10.7208 12.1372 11.0567 12.143Z\",\n    fill: \"#A47087\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 28,\n    cy: 28,\n    r: 27.5,\n    stroke: \"#A47087\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgPerson);\nexport default __webpack_public_path__ + \"static/media/person.66db152799c2fe9b8b9fbc0e4cb032d4.svg\";\nexport { ForwardRef as ReactComponent };","var _circle, _g, _defs;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgBouquet(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 56,\n    height: 56,\n    viewBox: \"0 0 56 56\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 28,\n    cy: 28,\n    r: 27.5,\n    stroke: \"#A47087\"\n  })), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_1_178)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M29.3629 5.46768C29.8168 5.78349 30.3818 6.23641 30.5491 6.77917C30.5625 6.85565 30.5625 6.85565 30.5762 6.93367C30.6641 6.92109 30.6641 6.92109 30.7537 6.90826C31.8841 6.77231 32.8492 7.01028 33.7688 7.70271C34.3207 8.2073 34.6483 8.86676 34.8829 9.57039C34.9679 9.579 35.0528 9.58761 35.1404 9.59648C36.682 9.77354 36.682 9.77354 37.2577 10.2423C37.4649 10.3841 37.5406 10.383 37.7833 10.3394C37.8413 10.3299 37.8993 10.3204 37.9591 10.3106C38.1335 10.2761 38.1335 10.2761 38.2962 10.2268C39.3547 9.99754 40.3701 10.248 41.2649 10.8197C41.9982 11.3682 42.5431 12.1737 42.7052 13.086C42.7135 13.3001 42.7166 13.5144 42.7161 13.7287C42.7164 13.8408 42.7166 13.9528 42.7168 14.0683C42.7052 14.4044 42.7052 14.4044 42.6406 14.7329C42.5868 15.018 42.5868 15.018 42.747 15.2057C42.8405 15.2822 42.8405 15.2822 42.9359 15.3602C43.6064 15.9687 43.9675 16.77 44.0486 17.6714C44.0776 18.7479 43.7917 19.6925 43.0471 20.4922C42.5708 20.9356 42.0943 21.2291 41.4747 21.4356C41.3619 21.6842 41.3619 21.6842 41.2714 21.9952C41.2333 22.1148 41.1951 22.2344 41.1569 22.3541C41.1371 22.4174 41.1174 22.4808 41.097 22.5461C39.6918 27.0277 37.4295 32.4802 33.3009 35.1466C33.2428 35.1466 33.1848 35.1466 33.1251 35.1466C33.1611 35.1967 33.1971 35.2469 33.2342 35.2987C33.7363 36.0542 33.9256 36.8109 33.7568 37.7119C33.5369 38.4552 33.0025 38.9957 32.3341 39.3653C32.3496 39.4238 32.3651 39.4823 32.3811 39.5425C32.4517 39.8093 32.522 40.0762 32.5922 40.3431C32.6167 40.4351 32.6411 40.5271 32.6662 40.6219C32.7015 40.7561 32.7015 40.7561 32.7375 40.8931C32.7591 40.975 32.7807 41.0569 32.803 41.1414C32.9853 41.9076 33.1503 42.9749 32.8175 43.7214C32.4982 44.2339 32.0242 44.6213 31.4552 44.8145C31.2188 44.8357 31.2188 44.8357 30.9615 44.8345C30.8648 44.8345 30.768 44.8345 30.6683 44.8344C30.5131 44.8331 30.5131 44.8331 30.3548 44.8317C30.2481 44.8314 30.1415 44.8312 30.0315 44.8309C29.6913 44.83 29.351 44.8278 29.0107 44.8255C28.7798 44.8246 28.5489 44.8238 28.318 44.8231C27.7524 44.8212 27.1868 44.8182 26.6212 44.8145C26.6159 44.8835 26.6106 44.9525 26.6052 45.0236C26.549 45.7316 26.4537 46.4223 26.33 47.1217C26.3124 47.2284 26.2948 47.3351 26.2766 47.4451C26.1164 48.356 25.8719 49.06 25.127 49.6485C24.2935 50.2323 23.1469 50.0633 22.1937 49.9012C21.4393 49.7536 20.8351 49.4757 20.3425 48.874C19.8881 48.197 19.7514 47.4977 19.8938 46.6983C19.935 46.5086 19.9797 46.3206 20.0294 46.1329C19.9605 46.1614 19.9605 46.1614 19.8903 46.1906C19.1899 46.4555 18.4596 46.5363 17.7579 46.23C16.682 45.6784 15.5133 45.0652 15.1075 43.8477C15.0316 42.9529 15.0596 42.2287 15.6585 41.5181C15.8775 41.27 16.1041 41.0299 16.3335 40.7915C16.5705 40.5443 16.7887 40.2866 17.0026 40.019C17.2815 39.6716 17.5727 39.3397 17.8761 39.0137C18.2531 38.6086 18.6059 38.1895 18.9531 37.7582C19.1582 37.5102 19.3719 37.273 19.5899 37.0362C19.9488 36.6463 20.2853 36.2437 20.6165 35.8301C20.7634 35.6543 20.9104 35.488 21.0683 35.3227C21.1299 35.2578 21.1299 35.2578 21.1927 35.1915C21.3087 35.0705 21.426 34.9507 21.5434 34.831C21.7182 34.6379 21.7182 34.6379 21.6976 34.4318C21.5954 34.2372 21.4935 34.1447 21.3203 34.0095C18.2604 31.4351 16.4348 27.3559 15.0855 23.6823C15.0647 23.6259 15.0439 23.5694 15.0225 23.5112C14.8337 22.9962 14.6576 22.5078 14.5802 21.963C14.5221 21.9575 14.4641 21.9521 14.4044 21.9465C14.0338 21.8461 13.7524 21.6508 13.4376 21.4356C13.3614 21.3849 13.2853 21.3341 13.2069 21.2818C12.5048 20.6167 12.1171 19.7345 12.0777 18.7745C12.067 17.9155 12.21 17.2113 12.729 16.5083C12.8688 16.2989 12.9185 16.2153 12.8793 15.9637C12.8289 15.8173 12.7763 15.6716 12.7217 15.5267C12.4627 14.6881 12.6497 13.8087 13.0173 13.0369C13.5157 12.1275 14.2435 11.5776 15.2036 11.2297C15.546 11.1341 15.8647 11.1511 16.2172 11.1683C17.0926 11.2344 17.0926 11.2344 17.8541 10.8668C17.937 10.7828 17.937 10.7828 18.0216 10.6972C18.5555 10.17 19.3269 10.0852 20.0404 10.0867C20.1475 10.0865 20.2547 10.0863 20.3651 10.0861C20.6446 10.0977 20.6446 10.0977 20.9083 10.1856C20.9119 10.1167 20.9155 10.0479 20.9193 9.97688C21.074 9.3358 21.4643 8.76731 21.963 8.33992C22.0124 8.29675 22.0618 8.25359 22.1127 8.20911C22.6001 7.80985 23.189 7.51337 23.8221 7.43869C24.0834 7.33315 24.1233 7.13043 24.2316 6.87874C24.6244 6.05207 25.1816 5.57206 26.0059 5.17585C27.0949 4.7942 28.3726 4.87209 29.3629 5.46768ZM26.112 7.37209C25.8119 7.7848 25.61 8.17314 25.6544 8.69148C25.7767 9.26483 25.7767 9.26483 26.1817 9.65828C26.2243 9.62859 26.2669 9.59891 26.3108 9.56833C27.209 8.97068 28.0416 8.99606 29.0821 9.13093C29.2059 8.49154 29.1707 8.02275 28.8184 7.46101C28.4117 7.05755 28.0178 6.83555 27.4396 6.81831C26.8844 6.82801 26.4895 6.9535 26.112 7.37209ZM31.0157 8.77937C30.986 8.87579 30.9563 8.9722 30.9257 9.07154C30.8862 9.19937 30.8466 9.3272 30.807 9.45503C30.7875 9.51842 30.768 9.58181 30.7479 9.64712C30.6448 9.97933 30.5359 10.3042 30.4005 10.6251C30.4969 10.6537 30.5933 10.6824 30.6926 10.7119C30.8205 10.7507 30.9483 10.7895 31.0761 10.8283C31.1395 10.8471 31.2029 10.8658 31.2682 10.8851C31.6269 10.9949 31.9318 11.1168 32.2462 11.3282C32.3796 11.1943 32.5111 11.0584 32.6417 10.9217C32.7151 10.8462 32.7885 10.7708 32.8641 10.6931C33.07 10.4031 33.0857 10.2702 33.0372 9.92195C32.8581 9.44581 32.5316 9.10262 32.0941 8.8525C31.7392 8.72241 31.3874 8.7451 31.0157 8.77937ZM23.1934 9.74617C22.8072 10.1646 22.6131 10.5554 22.6263 11.1363C22.7062 11.5216 22.9571 11.8135 23.1934 12.1192C23.2533 12.2044 23.3131 12.2896 23.3747 12.3774C23.672 12.6938 23.9536 12.745 24.3745 12.7619C24.7393 12.754 24.9927 12.6724 25.3028 12.4708C25.4677 12.1409 25.3923 11.764 25.3028 11.4161C25.0945 11.2118 25.0945 11.2118 24.9296 11.1054C24.433 10.6906 24.122 9.99146 23.8966 9.3946C23.6009 9.3946 23.4253 9.57455 23.1934 9.74617ZM26.901 10.5066C26.5068 10.9559 26.4137 11.3042 26.4207 11.8991C26.4688 12.3274 26.7062 12.5627 27.0112 12.8443C27.4497 13.1438 27.7507 13.2079 28.2725 13.1334C28.7605 13.0144 29.0679 12.6963 29.3458 12.295C29.4803 11.8915 29.5164 11.471 29.3705 11.0642C29.1303 10.6157 28.8399 10.354 28.3735 10.1636C27.8313 10.0252 27.3177 10.1276 26.901 10.5066ZM33.9216 12.1192C33.5525 12.6561 33.4952 13.0521 33.5645 13.7012C33.7084 14.2663 34.0406 14.5367 34.5207 14.8411C34.7121 14.9509 34.7121 14.9509 34.9708 14.9317C35.093 14.7994 35.093 14.7994 35.196 14.6296C35.3937 14.3248 35.3937 14.3248 35.586 14.2286C35.6044 14.0424 35.6137 13.8553 35.619 13.6683C35.6522 13.0651 35.7909 12.5835 36.0255 12.0313C36.0545 11.9443 36.0835 11.8573 36.1134 11.7677C35.3252 11.3893 34.5313 11.4085 33.9216 12.1192ZM18.6482 12.5594C18.3504 13.0272 18.2415 13.4032 18.2716 13.9649C18.3296 14.0519 18.3876 14.1389 18.4473 14.2286C18.4971 14.2147 18.5468 14.2007 18.5981 14.1864C19.3929 14.0057 20.1542 14.1917 20.8424 14.6135C20.9852 14.7145 21.1232 14.8224 21.2598 14.9317C21.67 14.3363 21.7867 13.893 21.6993 13.1739C21.4808 12.6264 21.1084 12.2444 20.5677 12.0094C19.8501 11.8371 19.1448 11.9779 18.6482 12.5594ZM37.6954 12.7344C37.5275 13.021 37.4317 13.2768 37.4317 13.6134C37.5146 13.6343 37.5146 13.6343 37.5993 13.6556C38.3901 13.8712 38.9717 14.1697 39.4532 14.8438C39.5462 15.017 39.6359 15.1921 39.7169 15.3712C40.2342 15.1546 40.5282 14.8615 40.799 14.3714C40.9528 13.7844 40.8768 13.3543 40.5958 12.8223C40.32 12.3663 39.9481 12.1876 39.4532 12.0313C38.7382 11.945 38.1947 12.2351 37.6954 12.7344ZM30.4005 12.5587C30.357 12.662 30.3135 12.7653 30.2686 12.8718C29.9466 13.5057 29.4789 13.849 28.8184 14.0913C28.6725 14.1387 28.5261 14.185 28.379 14.2286C28.389 14.7894 28.5219 15.0613 28.8905 15.48C29.1433 15.6843 29.3947 15.7806 29.6973 15.8985C29.7262 15.8199 29.7551 15.7413 29.7849 15.6602C30.1655 14.6928 30.6541 13.8948 31.6309 13.4376C31.3901 13.0299 31.1794 12.7902 30.752 12.5587C30.636 12.5587 30.52 12.5587 30.4005 12.5587ZM15.0471 13.4541C14.7266 13.8439 14.5215 14.2036 14.4483 14.7065C14.5322 15.3044 14.7144 15.7446 15.2009 16.1182C15.5416 16.3537 15.8089 16.4373 16.2226 16.4313C16.2936 16.4306 16.3647 16.4298 16.4379 16.4289C16.4919 16.4279 16.546 16.4269 16.6016 16.4259C16.8577 15.7178 16.883 15.2973 16.6013 14.6018C16.4404 14.0773 16.487 13.5419 16.5137 12.9981C15.9131 12.9845 15.5221 13.0674 15.0471 13.4541ZM25.9125 14.1846C25.8318 14.2254 25.751 14.2662 25.6678 14.3082C25.6053 14.34 25.5429 14.3717 25.4786 14.4044C25.5334 14.7036 25.6483 14.8946 25.8247 15.1405C26.0335 15.4434 26.1773 15.7141 26.2696 16.0743C26.4436 16.0163 26.6177 15.9583 26.7969 15.8985C26.7283 15.4761 26.6512 15.0556 26.5717 14.6351C26.5595 14.5704 26.5474 14.5057 26.5348 14.439C26.5051 14.281 26.4752 14.123 26.4454 13.9649C26.2606 13.9649 26.0725 14.1036 25.9125 14.1846ZM35.9925 15.2998C35.7611 15.7003 35.6409 16.0811 35.7007 16.5464C35.8426 17.0658 36.1115 17.3586 36.5528 17.6563C36.9037 17.8317 37.314 17.7885 37.6954 17.7442C38.1188 17.5944 38.3973 17.3599 38.6182 16.9697C38.7692 16.6089 38.8367 16.284 38.7501 15.8985C38.5511 15.4517 38.2824 15.1144 37.8712 14.8438C37.1417 14.6007 36.5438 14.792 35.9925 15.2998ZM18.0134 15.8216C17.6987 16.2603 17.7001 16.5983 17.7442 17.129C17.899 17.5847 18.1448 17.8202 18.5352 18.0958C18.9582 18.2981 19.32 18.3067 19.7657 18.1837C20.2288 17.9343 20.5638 17.6349 20.7325 17.129C20.7821 16.6287 20.7595 16.2369 20.4688 15.8106C20.0901 15.4484 19.7752 15.2318 19.2548 15.1624C18.7484 15.222 18.3443 15.4314 18.0134 15.8216ZM32.1583 15.1954C32.0894 15.2751 32.0205 15.3549 31.9495 15.4371C31.9108 15.482 31.872 15.5268 31.8321 15.573C31.5643 15.9269 31.5224 16.1788 31.5321 16.6236C31.5336 16.7183 31.5352 16.813 31.5369 16.9106C31.5389 16.9827 31.5409 17.0547 31.543 17.129C31.647 17.1333 31.7511 17.1376 31.8582 17.142C32.5896 17.1755 33.2896 17.2198 34.004 17.3927C34.265 17.0881 34.265 17.0881 34.5313 16.7774C34.4517 16.7475 34.372 16.7176 34.29 16.6868C33.5773 16.4032 33.0506 16.1058 32.5098 15.5469C32.4448 15.4819 32.3798 15.4169 32.3128 15.3499C32.2618 15.2989 32.2108 15.2479 32.1583 15.1954ZM23.1934 15.3712C23.1498 15.4295 23.1062 15.4879 23.0613 15.548C22.7016 16.0154 22.3758 16.3766 21.8751 16.6895C22.0388 16.8601 22.2035 17.0225 22.388 17.1705C22.8724 17.5631 23.1656 17.9864 23.4571 18.5352C23.8931 18.4775 24.0447 18.3398 24.3099 18.0041C24.5907 17.5804 24.6363 17.1695 24.5526 16.6816C24.4193 16.1337 24.1053 15.755 23.6329 15.4591C23.4012 15.3983 23.4012 15.3983 23.1934 15.3712ZM40.788 16.8543C40.4363 17.0389 40.0968 17.1878 39.7169 17.3048C39.7964 17.5103 39.8767 17.7127 39.9764 17.9094C40.2586 18.4812 40.346 19.0478 40.42 19.6778C41.0219 19.6563 41.4076 19.5062 41.8262 19.0626C42.1128 18.619 42.2534 18.1858 42.1778 17.6563C42.0411 17.2588 41.8995 16.8698 41.5626 16.6016C41.2371 16.6016 41.0752 16.7033 40.788 16.8543ZM26.7969 18.1837C26.5051 18.5589 26.4306 18.946 26.4454 19.4141C26.5319 19.7733 26.6795 20.073 26.8848 20.3809C27.2213 20.3156 27.414 20.1733 27.6779 19.9638C28.1537 19.662 28.6155 19.6548 29.159 19.6668C29.2623 19.668 29.2623 19.668 29.3677 19.6692C29.5362 19.6713 29.7047 19.6744 29.8731 19.6778C29.9577 19.1233 29.9766 18.7702 29.6973 18.2716C29.3512 17.8721 28.9895 17.5116 28.4432 17.4627C27.7072 17.4491 27.293 17.6205 26.7969 18.1837ZM14.1407 17.7442C13.907 18.1971 13.8746 18.6774 14.0223 19.1635C14.2236 19.6146 14.5226 19.9308 14.9317 20.2052C15.1969 20.2935 15.3901 20.3104 15.6678 20.315C15.7912 20.3184 15.7912 20.3184 15.9171 20.3219C16.2167 20.2866 16.3705 20.2243 16.6016 20.0294C16.6865 19.7718 16.6865 19.7718 16.706 19.4801C16.7514 19.0555 16.8278 18.6781 16.9532 18.2716C16.8566 18.2693 16.7599 18.267 16.6603 18.2647C15.9564 18.2405 15.3424 18.195 14.6856 17.9145C14.5046 17.8374 14.3324 17.7863 14.1407 17.7442ZM35.4981 18.4473C35.4039 18.7893 35.4127 18.9554 35.5695 19.2713C35.8258 19.8565 35.8737 20.4532 35.9376 21.0841C36.411 21.2964 36.8311 21.3302 37.3438 21.2598C37.8793 21.0446 38.2355 20.6825 38.5084 20.1777C38.6377 19.7144 38.6289 19.3657 38.4425 18.9307C38.399 18.8582 38.3554 18.7857 38.3106 18.711C38.2383 18.7257 38.1661 18.7405 38.0916 18.7556C37.1966 18.9189 36.5675 18.8797 35.7618 18.4473C35.6748 18.4473 35.5878 18.4473 35.4981 18.4473ZM21.1719 18.5352C21.1314 18.5702 21.0908 18.6052 21.049 18.6413C20.2664 19.277 19.5249 19.3722 18.5352 19.3262C18.3577 19.6812 18.3914 20.1134 18.5074 20.486C18.7526 21.0211 19.1283 21.3846 19.6778 21.6114C20.2178 21.6742 20.7207 21.6759 21.1719 21.3477C21.6031 20.9174 21.8838 20.5962 21.9025 19.9689C21.8979 19.5173 21.7956 19.1626 21.5235 18.7989C21.3428 18.6496 21.3428 18.6496 21.1719 18.5352ZM31.8946 18.9747C31.7542 19.4498 31.6331 19.9285 31.5152 20.4098C31.4723 20.5777 31.4221 20.7438 31.3673 20.9083C31.4947 20.9292 31.4947 20.9292 31.6248 20.9505C32.2685 21.0634 32.8193 21.1939 33.3929 21.5245C33.5717 21.6312 33.5717 21.6312 33.8282 21.6114C34.039 21.0968 34.1788 20.6611 34.004 20.1173C33.7799 19.6289 33.5161 19.3229 33.0372 19.0626C32.7722 18.9742 32.5941 18.9656 32.3176 18.9692C32.2384 18.97 32.1592 18.9708 32.0776 18.9716C31.987 18.9731 31.987 18.9731 31.8946 18.9747ZM24.2481 20.7325C23.8834 21.1175 23.746 21.472 23.6878 21.9959C23.7451 22.55 23.9602 22.9426 24.3745 23.3143C24.8196 23.6621 25.1711 23.77 25.7423 23.7208C26.107 23.5931 26.3597 23.4746 26.6212 23.1934C26.5256 22.5665 26.5256 22.5665 26.1824 22.0533C26.0453 21.9556 25.907 21.8596 25.7677 21.7652C25.313 21.4176 25.0617 20.9068 24.8634 20.3809C24.6447 20.3809 24.4128 20.613 24.2481 20.7325ZM27.8242 21.2818C27.5949 21.6554 27.4586 21.99 27.5361 22.4323C27.6922 22.9449 27.8992 23.3114 28.3515 23.6164C28.8259 23.7865 29.236 23.7867 29.7138 23.6274C30.1066 23.3568 30.424 23.0351 30.5762 22.5782C30.6086 22.0846 30.5972 21.7701 30.3126 21.3477C29.9361 20.9756 29.6508 20.7208 29.1096 20.705C28.543 20.7116 28.2331 20.884 27.8242 21.2818ZM16.6016 22.0509C16.7341 22.8058 17.019 23.4889 17.3103 24.1932C17.3359 24.2557 17.3616 24.3183 17.3881 24.3827C18.4664 27.0058 19.7527 29.4689 21.6114 31.6309C21.6709 31.7012 21.7304 31.7714 21.7916 31.8438C22.1702 32.2819 22.5662 32.6745 23.0177 33.0372C23.0859 33.0921 23.1541 33.1471 23.2243 33.2037C23.7061 33.5726 24.2125 33.8863 24.7425 34.1798C24.8033 34.2148 24.8642 34.2498 24.9268 34.2858C25.3938 34.5357 25.7417 34.5645 26.2696 34.5313C26.1569 34.1692 26.0213 33.8415 25.8453 33.5058C25.7724 33.3662 25.7724 33.3662 25.698 33.2238C25.6473 33.1278 25.5967 33.0317 25.5445 32.9328C25.4952 32.8385 25.4459 32.7442 25.3952 32.647C25.1019 32.087 25.1019 32.087 24.7966 31.5336C24.7484 31.4485 24.7002 31.3633 24.6505 31.2756C24.6069 31.2002 24.5633 31.1249 24.5184 31.0472C24.3735 30.7293 24.3984 30.5506 24.5118 30.2247C24.7759 30.0926 24.9222 30.0851 25.2149 30.1368C25.6398 30.6333 25.9076 31.3116 26.2037 31.8891C26.3042 32.0839 26.4048 32.2787 26.5055 32.4734C26.5546 32.5687 26.6038 32.664 26.6544 32.7621C26.8553 33.1498 27.0591 33.5359 27.2639 33.9216C27.3138 34.0156 27.3138 34.0156 27.3647 34.1116C27.4391 34.2515 27.5135 34.3914 27.588 34.5313C27.791 34.5313 27.994 34.5313 28.2032 34.5313C28.3227 34.3082 28.4416 34.0847 28.5603 33.8612C28.5985 33.7895 28.6368 33.7178 28.6762 33.6439C28.9339 33.1564 29.1783 32.6642 29.4155 32.1665C29.5025 31.9858 29.5897 31.8052 29.677 31.6245C29.7344 31.5044 29.7912 31.384 29.8473 31.2632C29.9269 31.0917 30.0089 30.9215 30.0915 30.7513C30.1618 30.6023 30.1618 30.6023 30.2335 30.4502C30.4005 30.2247 30.4005 30.2247 30.6704 30.1399C30.9706 30.1363 31.0666 30.1959 31.2794 30.4005C31.24 30.9775 31.0835 31.39 30.8176 31.8998C30.7807 31.9727 30.7437 32.0456 30.7057 32.1208C30.5884 32.3517 30.4698 32.5818 30.351 32.812C30.2323 33.0444 30.1138 33.2771 29.9955 33.5098C29.9219 33.6541 29.8481 33.7983 29.7739 33.9423C29.6004 34.224 29.6004 34.224 29.5216 34.5313C30.5489 34.688 31.3971 34.1871 32.2108 33.6105C32.495 33.4001 32.7667 33.1772 33.0372 32.9493C33.1485 32.8565 33.1485 32.8565 33.2621 32.7618C34.6843 31.5386 35.7283 29.9113 36.6407 28.2911C36.6789 28.2238 36.717 28.1566 36.7563 28.0873C37.6013 26.5845 38.2509 24.9853 38.8599 23.3747C38.8863 23.3061 38.9127 23.2375 38.9398 23.1668C39.0853 22.7905 39.0853 22.7905 39.0137 22.4024C38.9488 22.4384 38.8839 22.4745 38.817 22.5116C37.7078 23.1007 36.8913 23.1415 35.6739 22.9298C35.5739 22.9131 35.4738 22.8965 35.3707 22.8793C35.2968 22.8669 35.2228 22.8546 35.1466 22.8419C34.9928 22.9702 34.9928 22.9702 34.8829 23.1934C34.8853 23.3844 34.9134 23.566 34.9406 23.7551C35.0899 24.8884 34.884 25.9437 34.1842 26.8653C33.5194 27.5858 32.6723 27.971 31.7006 28.0415C31.184 28.0602 30.7543 27.9737 30.2638 27.8128C30.0289 27.7592 29.918 27.7584 29.6973 27.8516C29.5604 27.9765 29.5604 27.9765 29.4337 28.1318C28.837 28.7595 28.0166 29.0859 27.1628 29.1078C26.1082 29.1173 25.2494 28.8979 24.4239 28.2032C23.7134 27.4814 23.4388 26.6105 23.4241 25.6214C23.428 25.1253 23.428 25.1253 23.2466 24.6759C23.0914 24.5532 23.0914 24.5532 22.9222 24.4545C22.4758 24.1402 22.2395 23.5145 22.0509 23.0177C21.9367 23.0557 21.9367 23.0557 21.8201 23.0946C21.7223 23.1272 21.6244 23.1598 21.5235 23.1934C21.4438 23.2242 21.364 23.2551 21.2818 23.2868C20.1962 23.6 19.2344 23.412 18.2444 22.8975C17.7778 22.6144 17.5158 22.3286 17.2169 21.8751C16.9843 21.8751 16.8143 21.9613 16.6016 22.0509ZM31.6309 22.8419C31.601 22.9109 31.5711 22.9799 31.5403 23.051C31.1927 23.8043 30.8229 24.3412 30.0489 24.6821C29.9184 24.7283 29.9184 24.7283 29.7852 24.7755C29.8433 25.2694 30.0761 25.5977 30.4279 25.94C30.8715 26.2289 31.2923 26.3156 31.8084 26.2287C32.3619 26.0792 32.7137 25.7649 33.0372 25.3028C33.2689 24.8393 33.2357 24.3916 33.1251 23.8966C32.911 23.4764 32.6345 23.1962 32.2462 22.9298C31.9186 22.8524 31.9186 22.8524 31.6309 22.8419ZM27.4232 24.9348C26.7496 25.3881 26.0109 25.5012 25.2149 25.5665C25.1582 26.0199 25.2824 26.2717 25.5287 26.6363C25.8122 26.9988 26.1855 27.2863 26.6473 27.3538C27.3164 27.3645 27.7646 27.2227 28.2526 26.7585C28.3967 26.5467 28.3967 26.5467 28.3735 26.33C28.2854 26.0775 28.1916 25.8278 28.0947 25.5785C27.9901 25.2865 27.9217 24.9896 27.8516 24.6876C27.6876 24.6876 27.5504 24.8417 27.4232 24.9348ZM24.2048 36.5831C24.0488 36.8116 24.0488 36.8116 24.0778 37.0911C24.1657 37.3607 24.1949 37.4479 24.4239 37.6075C24.6598 37.6335 24.8753 37.6435 25.1112 37.6416C25.2161 37.6423 25.2161 37.6423 25.3231 37.643C25.5544 37.6442 25.7856 37.6434 26.0169 37.6425C26.1775 37.6427 26.3381 37.6429 26.4986 37.6433C26.8353 37.6437 27.1719 37.6431 27.5085 37.6419C27.9403 37.6404 28.3721 37.6412 28.8039 37.6428C29.1355 37.6438 29.4671 37.6435 29.7987 37.6428C29.9579 37.6426 30.1172 37.6428 30.2764 37.6434C30.4988 37.6441 30.7212 37.6431 30.9436 37.6416C31.0096 37.6421 31.0757 37.6427 31.1437 37.6432C31.4934 37.639 31.4934 37.639 31.8033 37.4924C31.9614 37.235 31.9305 37.0209 31.8946 36.7286C31.7652 36.5228 31.7652 36.5228 31.543 36.377C31.302 36.3419 31.0961 36.328 30.8552 36.3301C30.7518 36.329 30.7518 36.329 30.6463 36.3278C30.4188 36.3259 30.1913 36.3264 29.9638 36.3272C29.8055 36.3268 29.6472 36.3262 29.489 36.3256C29.1574 36.3247 28.8258 36.3251 28.4942 36.3264C28.0692 36.3279 27.6442 36.3258 27.2192 36.3227C26.8924 36.3208 26.5657 36.3209 26.2389 36.3216C26.0822 36.3217 25.9255 36.3211 25.7688 36.3198C25.5497 36.3183 25.3308 36.3196 25.1117 36.3216C25.047 36.3205 24.9822 36.3195 24.9155 36.3184C24.5852 36.3246 24.4491 36.3534 24.2048 36.5831ZM22.1387 36.9923C21.9889 37.1456 21.8434 37.3006 21.6993 37.4592C21.6338 37.5309 21.6338 37.5309 21.5669 37.6041C21.2251 37.9814 20.9034 38.3726 20.5842 38.7693C20.3634 39.0349 20.1327 39.2884 19.8975 39.5411C19.5205 39.9463 19.1677 40.3653 18.8205 40.7966C18.6154 41.0446 18.4016 41.2818 18.1837 41.5186C17.8825 41.8481 17.5839 42.1791 17.2938 42.5184C17.2283 42.5943 17.1628 42.6702 17.0953 42.7484C16.9422 42.9578 16.9422 42.9578 16.9044 43.1892C16.9978 43.6087 17.3344 43.8064 17.6701 44.0445C17.767 44.1046 17.864 44.1648 17.9639 44.2268C18.0609 44.2881 18.1579 44.3493 18.2578 44.4125C18.6046 44.5908 18.6046 44.5908 18.9747 44.5509C19.4252 44.1131 19.7345 43.5413 20.0678 43.0128C20.1927 42.815 20.3177 42.6172 20.4427 42.4195C20.4742 42.3697 20.5056 42.3198 20.538 42.2685C20.7438 41.9436 20.9553 41.6231 21.1706 41.3044C22.1847 39.8394 22.1847 39.8394 22.4608 38.1232C22.4415 38.04 22.4223 37.9568 22.4024 37.8712C22.3869 37.7907 22.3714 37.7103 22.3554 37.6274C22.3401 37.552 22.3248 37.4765 22.309 37.3988C22.2935 37.3219 22.278 37.2451 22.262 37.166C22.2445 37.08 22.2445 37.08 22.2266 36.9923C22.1976 36.9923 22.1686 36.9923 22.1387 36.9923ZM25.3907 39.5411C25.0189 40.6372 25.0189 40.6372 24.737 41.7493C24.7208 41.8194 24.7045 41.8894 24.6877 41.9615C24.6733 42.0295 24.6589 42.0975 24.644 42.1675C24.6311 42.2268 24.6183 42.286 24.605 42.3471C24.598 42.5854 24.6834 42.7513 24.7755 42.9688C25.5876 42.9709 26.3997 42.9724 27.2118 42.9734C27.5888 42.9738 27.9659 42.9745 28.343 42.9755C28.7065 42.9764 29.0701 42.9769 29.4337 42.9772C29.5727 42.9773 29.7117 42.9776 29.8507 42.9781C30.0448 42.9788 30.2388 42.9788 30.4329 42.9788C30.5989 42.9791 30.5989 42.9791 30.7682 42.9794C31.0072 42.9971 31.0072 42.9971 31.1036 42.8809C31.1375 42.3116 31.0418 41.8117 30.9058 41.2605C30.8878 41.1822 30.8698 41.104 30.8512 41.0234C30.7205 40.4809 30.5486 40.0721 30.3126 39.5411C28.6884 39.5411 27.0641 39.5411 25.3907 39.5411ZM22.8419 43.4962C22.6762 44.0134 22.5119 44.5311 22.3489 45.0492C22.2932 45.2253 22.2372 45.4014 22.1808 45.5773C22.0998 45.8303 22.0201 46.0837 21.9406 46.3372C21.9152 46.4156 21.8898 46.4941 21.8635 46.575C21.6943 47.097 21.6943 47.097 21.7872 47.627C22.0367 47.9543 22.2425 48.0323 22.6441 48.0885C22.8269 48.1127 23.0101 48.1348 23.1934 48.1544C23.2627 48.1629 23.3319 48.1714 23.4032 48.1801C23.7239 48.2027 23.8718 48.1737 24.1272 47.9746C24.3729 47.6691 24.4297 47.4153 24.4751 47.0375C24.4842 46.9738 24.4933 46.91 24.5027 46.8443C24.5313 46.6422 24.5573 46.4398 24.5832 46.2373C24.6022 46.0995 24.6214 45.9618 24.6407 45.8241C24.6876 45.4878 24.7321 45.1513 24.7755 44.8145C24.667 44.7894 24.5586 44.7642 24.4469 44.7383C23.854 44.5892 23.4366 44.3488 23.111 43.8203C23.0776 43.759 23.0442 43.6977 23.0098 43.6345C22.9834 43.5889 22.957 43.5432 22.9298 43.4962C22.9008 43.4962 22.8718 43.4962 22.8419 43.4962Z\",\n    fill: \"#A47087\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M44.4629 27.4121C44.6799 27.4166 44.6799 27.4166 44.9023 27.5C45.0259 27.696 45.0259 27.696 45.1221 27.9559C45.1602 28.0512 45.1984 28.1465 45.2378 28.2447C45.3418 28.5547 45.3418 28.5547 45.3991 28.8675C45.5024 29.3367 45.5813 29.652 45.9871 29.9222C46.4825 30.1841 46.998 30.3918 47.5243 30.583C47.7148 30.6641 47.7148 30.6641 47.8906 30.8398C47.917 31.0881 47.917 31.0881 47.8027 31.3672C47.4243 31.5991 46.9978 31.7363 46.5831 31.8899C46.0013 32.1229 46.0013 32.1229 45.6511 32.6179C45.6037 32.7567 45.5592 32.8965 45.5176 33.0371C45.4661 33.1774 45.4139 33.3175 45.361 33.4573C45.2843 33.667 45.2083 33.8768 45.1348 34.0877C45.0972 34.189 45.0972 34.189 45.0589 34.2923C45.0372 34.3531 45.0155 34.4139 44.9931 34.4765C44.9023 34.6191 44.9023 34.6191 44.7332 34.6945C44.5508 34.707 44.5508 34.707 44.2871 34.5312C44.2013 34.318 44.2013 34.318 44.1254 34.052C43.8619 32.9665 43.8619 32.9665 43.2437 32.0868C42.977 31.9592 42.728 31.8778 42.4414 31.8066C41.7765 31.5547 41.7765 31.5547 41.4746 31.3672C41.3702 31.076 41.3702 31.076 41.3867 30.8398C41.7303 30.6108 42.0275 30.4213 42.4218 30.2888C42.9287 30.1097 43.3521 29.9425 43.6344 29.4617C43.8769 28.9205 44.0569 28.3608 44.2168 27.7903C44.2871 27.5879 44.2871 27.5879 44.4629 27.4121Z\",\n    fill: \"#A47087\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M38.3105 42.002C38.49 42.0131 38.49 42.0131 38.6621 42.0898C38.7348 42.242 38.7348 42.242 38.7785 42.439C38.9669 43.2523 38.9669 43.2523 39.4502 43.9018C39.7732 44.0873 40.1064 44.2126 40.4577 44.3335C40.5612 44.3762 40.6648 44.4189 40.7715 44.4629C40.8404 44.638 40.8404 44.638 40.8594 44.8145C40.6891 45.0901 40.4298 45.1379 40.1349 45.2353C39.7359 45.3768 39.389 45.51 39.1613 45.8838C38.9744 46.3122 38.8453 46.7554 38.7376 47.2098C38.6621 47.3633 38.6621 47.3633 38.4787 47.4292C38.4232 47.4365 38.3677 47.4437 38.3105 47.4512C38.074 47.189 37.9998 46.9419 37.912 46.6042C37.7683 46.0898 37.6297 45.7231 37.1529 45.4448C36.7871 45.2639 36.4116 45.121 36.0254 44.9902C36.0254 44.8162 36.0254 44.6422 36.0254 44.4629C36.1261 44.4305 36.2268 44.3981 36.3306 44.3647C37.1904 44.0539 37.1904 44.0539 37.7496 43.367C37.886 43.0295 37.9931 42.6847 38.082 42.3318C38.1348 42.1777 38.1348 42.1777 38.3105 42.002Z\",\n    fill: \"#A47087\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.39453 23.8086C9.51055 23.8086 9.62656 23.8086 9.74609 23.8086C9.75957 23.8582 9.77304 23.9077 9.78693 23.9588C10.0795 25.051 10.0795 25.051 10.8286 25.8397C11.1889 26.0191 11.5587 26.1524 11.9434 26.2695C11.9434 26.4146 11.9434 26.5596 11.9434 26.709C11.7129 26.8266 11.4821 26.9437 11.2512 27.0605C11.1856 27.0941 11.12 27.1276 11.0524 27.1622C10.9581 27.2098 10.9581 27.2098 10.8619 27.2583C10.8039 27.2878 10.7459 27.3172 10.6862 27.3476C10.5371 27.4121 10.5371 27.4121 10.3613 27.4121C10.3464 27.4654 10.3314 27.5186 10.316 27.5735C10.1578 28.1205 9.96616 28.6449 9.74609 29.1699C9.60107 29.1699 9.45605 29.1699 9.30664 29.1699C9.29491 29.1226 9.28317 29.0752 9.27109 29.0264C9.03374 28.0067 9.03374 28.0067 8.36628 27.2614C8.13824 27.1505 7.90614 27.0658 7.66556 26.9864C7.24469 26.8402 7.24469 26.8402 7.10938 26.6211C7.1283 26.446 7.1283 26.446 7.19727 26.2695C7.36483 26.1885 7.53317 26.1087 7.70521 26.0376C8.23675 25.8141 8.66151 25.6129 8.92418 25.0782C9.08096 24.6926 9.19549 24.2973 9.30664 23.8965C9.33564 23.8675 9.36465 23.8385 9.39453 23.8086Z\",\n    fill: \"#A47087\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.8973 36.039C11.3189 36.3612 11.5102 36.7347 11.5919 37.2557C11.6121 37.7892 11.5006 38.1582 11.1524 38.5741C10.7869 38.9297 10.4168 39.0964 9.90101 39.1045C9.33208 39.0653 8.99682 38.8674 8.58162 38.4752C8.32694 38.0568 8.2069 37.6157 8.28808 37.1263C8.44475 36.6135 8.65466 36.2398 9.12544 35.9594C9.73451 35.7108 10.3116 35.7161 10.8973 36.039Z\",\n    fill: \"#A47087\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M45.0781 39.3653C45.3308 39.5466 45.3308 39.5466 45.5176 39.8048C45.5731 40.1562 45.5773 40.3328 45.3748 40.6288C45.1166 40.8054 44.9516 40.8531 44.6387 40.8595C44.2375 40.6722 44.2375 40.6722 44.1114 40.42C44.0864 40.1621 44.0678 39.9673 44.1114 39.7169C44.397 39.3809 44.6438 39.2839 45.0781 39.3653Z\",\n    fill: \"#A47087\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_1_178\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 45,\n    height: 45,\n    fill: \"white\",\n    transform: \"translate(5 5)\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgBouquet);\nexport default __webpack_public_path__ + \"static/media/bouquet.605fce7a18e67befbfa98852a33d6c30.svg\";\nexport { ForwardRef as ReactComponent };","var _g, _circle, _defs;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgGeo(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 56,\n    height: 56,\n    viewBox: \"0 0 56 56\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_1_189)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M26.0456 9.98365C26.1013 9.98298 26.157 9.98231 26.2143 9.98162C27.4193 9.97011 28.5806 9.97558 29.756 10.2734C29.8154 10.2877 29.8749 10.3019 29.9362 10.3167C32.0161 10.824 33.8071 11.8374 35.4298 13.2128C35.5046 13.275 35.5046 13.275 35.5809 13.3383C35.8576 13.5726 36.1009 13.82 36.3348 14.097C36.4136 14.1894 36.4946 14.2802 36.5778 14.3688C38.5624 16.4926 39.6216 19.4272 39.7364 22.3046C39.7419 22.4065 39.7419 22.4065 39.7474 22.5105C39.8512 26.0337 37.8246 29.6145 36.1134 32.5585C36.077 32.6214 36.0406 32.6843 36.0031 32.7492C34.8411 34.7541 33.5596 36.6861 32.2169 38.5742C32.1806 38.6254 32.1442 38.6766 32.1068 38.7293C31.54 39.5264 30.9518 40.3062 30.356 41.0818C30.2518 41.2177 30.1479 41.3538 30.0444 41.4901C29.1767 42.6282 28.268 43.7448 27.295 44.7949C27.2628 44.834 27.2305 44.8731 27.1973 44.9134C26.9983 45.0738 26.7806 45.0442 26.5351 45.0349C26.1762 44.9712 25.9783 44.7704 25.7228 44.5214C25.6843 44.4847 25.6458 44.448 25.6062 44.4102C25.0572 43.8851 24.5516 43.3419 24.0822 42.7441C24.0153 42.6626 23.9483 42.5814 23.8811 42.5003C23.3474 41.8549 22.8448 41.1904 22.3533 40.5124C22.2418 40.3589 22.1295 40.206 22.017 40.0532C20.1644 37.5284 18.5254 34.8359 17.0411 32.08C16.9858 31.9782 16.9858 31.9782 16.9294 31.8744C15.7212 29.6477 14.7004 27.3009 14.1017 24.8339C14.0886 24.7798 14.0754 24.7258 14.0619 24.6701C13.3879 21.7511 14.2583 18.5045 15.8021 16.0027C16.3381 15.156 16.9654 14.4149 17.6564 13.6913C17.6975 13.6466 17.7387 13.6018 17.7811 13.5557C19.8176 11.4012 23.102 10.013 26.0456 9.98365ZM24.2872 11.3671C24.2313 11.379 24.1753 11.3908 24.1177 11.403C22.0132 11.8538 20.1947 12.9446 18.6134 14.3749C18.5537 14.4288 18.4941 14.4826 18.4326 14.5381C17.6173 15.3139 16.9632 16.2611 16.4259 17.246C16.402 17.2896 16.3782 17.3332 16.3536 17.3781C15.8037 18.3966 15.438 19.4655 15.1954 20.5956C15.1799 20.6662 15.1644 20.7368 15.1484 20.8095C14.5922 23.896 15.7928 26.8921 17.1095 29.6191C17.1329 29.6677 17.1563 29.7162 17.1804 29.7663C17.3081 30.0299 17.4397 30.2912 17.5737 30.5517C17.6353 30.6717 17.6965 30.7919 17.7575 30.9121C18.2904 31.9626 18.8479 32.9928 19.4532 34.0033C19.5664 34.1923 19.6784 34.382 19.7905 34.5717C20.4683 35.7104 21.2078 36.8079 21.9493 37.9057C22.0231 38.015 22.0966 38.1244 22.1702 38.2338C22.9438 39.3841 23.7613 40.5008 24.629 41.582C24.6815 41.6478 24.7341 41.7136 24.7882 41.7814C25.1029 42.1716 25.4314 42.5456 25.7714 42.9139C25.9037 43.0593 26.0298 43.2073 26.1543 43.3593C26.3084 43.5423 26.4636 43.6614 26.6798 43.7695C27.0478 43.4228 27.3666 43.0463 27.6824 42.6521C27.7813 42.5293 27.8814 42.4076 27.9816 42.2859C28.4612 41.7023 28.9219 41.1078 29.3714 40.5009C29.4912 40.3399 29.612 40.1797 29.733 40.0196C30.2453 39.3414 30.7455 38.6568 31.2317 37.9597C31.3238 37.8285 31.4171 37.6984 31.5109 37.5685C32.5641 36.1058 33.5425 34.5803 34.4728 33.037C34.5086 32.9778 34.5445 32.9185 34.5815 32.8575C35.1683 31.8855 35.7213 30.8972 36.2501 29.8925C36.2831 29.8302 36.316 29.7678 36.35 29.7036C38.1056 26.3603 39.1957 22.9272 38.0488 19.2129C37.8149 18.5033 37.4941 17.8337 37.1388 17.1777C37.1156 17.1348 37.0925 17.0919 37.0686 17.0477C35.587 14.3455 32.9942 12.4449 30.0807 11.5466C30.0308 11.5311 29.9808 11.5156 29.9294 11.4996C28.9574 11.218 28.0057 11.1282 26.9978 11.1353C26.8122 11.1364 26.6266 11.1353 26.441 11.134C25.6976 11.1331 25.0122 11.2 24.2872 11.3671Z\",\n    fill: \"#906E7E\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30.6892 17.5158C30.8596 17.6505 31.0257 17.7893 31.1915 17.9297C31.2522 17.9754 31.2522 17.9754 31.3141 18.022C32.4677 18.9153 33.2067 20.4822 33.4474 21.8945C33.4626 22.2034 33.46 22.5124 33.4602 22.8216C33.461 22.9045 33.4619 22.9874 33.4627 23.0728C33.464 23.8358 33.3821 24.5351 33.0928 25.2441C33.0717 25.2966 33.0507 25.3491 33.0291 25.4031C32.3148 27.1391 30.9822 28.3924 29.2775 29.1406C28.4777 29.4531 27.7373 29.573 26.8806 29.5636C26.8041 29.5635 26.7275 29.5635 26.6487 29.5634C25.9967 29.56 25.4103 29.5184 24.7914 29.3072C24.7383 29.2891 24.6852 29.271 24.6306 29.2524C22.9819 28.6684 21.5947 27.5138 20.8062 25.9384C20.6782 25.666 20.5663 25.3884 20.4591 25.1074C20.4374 25.052 20.4157 24.9965 20.3934 24.9394C19.8595 23.4725 19.999 21.7307 20.6319 20.3198C21.5145 18.5429 22.8598 17.2572 24.7358 16.5753C24.8364 16.5462 24.9376 16.5194 25.0392 16.4941C25.1099 16.4752 25.1807 16.4564 25.2536 16.437C27.0967 16.0026 29.1521 16.3884 30.6892 17.5158ZM22.5782 19.2968C21.4869 20.5623 21.1861 21.9788 21.2645 23.6069C21.3442 24.6826 21.8747 25.7366 22.5782 26.5429C22.6573 26.6422 22.6573 26.6422 22.7379 26.7435C23.5308 27.6937 24.8059 28.2418 25.9962 28.457C27.552 28.5954 29.0089 28.2617 30.2559 27.2992C30.3637 27.2078 30.4706 27.1153 30.5763 27.0215C30.6232 26.981 30.67 26.9406 30.7183 26.8989C31.6212 26.0653 32.2933 24.7366 32.3626 23.5129C32.4128 21.9481 32.1076 20.5204 31.0249 19.3396C30.9004 19.2088 30.7732 19.0819 30.6446 18.955C30.5675 18.878 30.5675 18.878 30.4887 18.7994C29.3678 17.7414 27.971 17.4036 26.4734 17.434C24.9489 17.4924 23.61 18.1974 22.5782 19.2968Z\",\n    fill: \"#8D6275\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M42.182 11.4423C42.6003 11.7563 42.8516 12.2287 42.9492 12.7345C43.0175 13.2863 42.8792 13.8005 42.5679 14.2613C42.2656 14.6276 41.9222 14.9003 41.4453 14.9903C40.703 15.0379 40.1951 15.0104 39.6167 14.5332C39.2397 14.1802 39.0241 13.7836 38.9681 13.2683C38.9502 12.6984 39.0869 12.173 39.4415 11.7176C40.1794 10.9366 41.2958 10.895 42.182 11.4423Z\",\n    fill: \"#996E81\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.5801 37.3437C14.8155 37.4889 14.9025 37.5589 14.9902 37.8222C14.9951 38.0094 14.9966 38.1948 14.9945 38.3819C14.9942 38.4332 14.9939 38.4844 14.9936 38.5372C14.9928 38.6635 14.9916 38.7897 14.9902 38.916C15.1101 38.9112 15.1101 38.9112 15.2324 38.9064C15.3383 38.9038 15.4441 38.9013 15.5499 38.8989C15.6025 38.8966 15.6551 38.8943 15.7092 38.8919C15.9844 38.8872 16.118 38.8943 16.3566 39.0452C16.5345 39.2317 16.5593 39.2925 16.5839 39.5526C16.5592 39.844 16.4928 39.9427 16.2891 40.1464C16.0628 40.2596 15.8112 40.2217 15.5628 40.2191C15.5079 40.2188 15.4531 40.2185 15.3967 40.2181C15.2612 40.2173 15.1257 40.2161 14.9902 40.2148C14.9938 40.3273 14.9938 40.3273 14.9975 40.442C14.9994 40.5415 15.0012 40.6409 15.0031 40.7403C15.0048 40.7896 15.0065 40.8389 15.0083 40.8897C15.0126 41.2041 14.9824 41.4025 14.7852 41.6503C14.5341 41.8177 14.3249 41.8439 14.0332 41.7871C13.8131 41.6138 13.7116 41.5059 13.6231 41.2402C13.6183 41.0643 13.6167 40.8904 13.6188 40.7147C13.6191 40.6667 13.6194 40.6187 13.6197 40.5693C13.6205 40.4511 13.6218 40.333 13.6231 40.2148C13.5431 40.218 13.4632 40.2211 13.3809 40.2244C13.275 40.227 13.1692 40.2295 13.0634 40.2319C13.0108 40.2342 12.9582 40.2365 12.9041 40.2388C12.6344 40.2435 12.494 40.2344 12.2569 40.0936C12.0806 39.8988 12.0544 39.788 12.0364 39.5336C12.0605 39.3006 12.1757 39.1583 12.3242 38.9843C12.5505 38.8712 12.8022 38.9091 13.0506 38.9117C13.1054 38.912 13.1602 38.9123 13.2166 38.9126C13.3521 38.9134 13.4876 38.9147 13.6231 38.916C13.6207 38.8467 13.6183 38.7774 13.6159 38.7061C13.6139 38.6137 13.6121 38.5213 13.6102 38.4289C13.6085 38.3834 13.6068 38.338 13.605 38.2911C13.6003 37.9678 13.6547 37.753 13.8281 37.4804C14.0803 37.3123 14.2873 37.2963 14.5801 37.3437Z\",\n    fill: \"#A47087\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M41.1719 12.3926C41.3628 12.4774 41.4762 12.5516 41.6076 12.713C41.6741 12.9589 41.6576 13.1751 41.582 13.418C41.4361 13.5948 41.3346 13.6731 41.108 13.717C40.8635 13.7318 40.7146 13.7018 40.4925 13.5931C40.2933 13.3456 40.2529 13.1176 40.2832 12.8027C40.5229 12.406 40.7209 12.362 41.1719 12.3926Z\",\n    fill: \"#A47087\"\n  }))), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 28,\n    cy: 28,\n    r: 27.5,\n    stroke: \"#A47087\"\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_1_189\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 35,\n    height: 35,\n    fill: \"white\",\n    transform: \"translate(10 10)\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgGeo);\nexport default __webpack_public_path__ + \"static/media/geo.c55f6b1a6fb84ebeb61a4f153c914b52.svg\";\nexport { ForwardRef as ReactComponent };","var _circle, _g, _defs;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgDelivery(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 56,\n    height: 56,\n    viewBox: \"0 0 56 56\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 28,\n    cy: 28,\n    r: 27.5,\n    stroke: \"#A47087\"\n  })), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_1_201)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34.386 12.5375C34.6203 12.6534 34.8447 12.7798 35.0702 12.912C35.1528 12.9586 35.2353 13.0052 35.3204 13.0532C35.4869 13.1473 35.653 13.242 35.8187 13.3375C36.0659 13.4797 36.3149 13.6183 36.5647 13.7559C36.731 13.8477 36.8969 13.9401 37.0627 14.0326C37.56 14.3097 38.0582 14.5851 38.5565 14.8602C38.6294 14.9005 38.6294 14.9005 38.7037 14.9415C39.4485 15.3526 40.1955 15.7592 40.9441 16.1635C41.5015 16.4648 42.0561 16.7709 42.6096 17.0795C43.1068 17.3566 43.6051 17.6319 44.1034 17.9071C44.1517 17.9338 44.2001 17.9605 44.2498 17.9881C44.7663 18.2734 45.2834 18.5572 45.8032 18.8364C45.8873 18.8816 45.9714 18.9267 46.058 18.9733C46.2142 19.0571 46.3706 19.1405 46.5271 19.2236C47.7379 19.8725 47.7379 19.8725 47.9999 20.2655C48.0208 20.5076 48.0208 20.5076 48.0226 20.8095C48.0231 20.8645 48.0236 20.9195 48.0242 20.9762C48.0257 21.1582 48.026 21.3402 48.0261 21.5222C48.0266 21.6488 48.0272 21.7754 48.0277 21.902C48.0286 22.1675 48.0289 22.4329 48.0288 22.6984C48.0288 23.0382 48.031 23.3781 48.0336 23.7179C48.0354 23.9794 48.0357 24.2409 48.0356 24.5025C48.0358 24.6278 48.0365 24.753 48.0377 24.8783C48.0392 25.0537 48.0388 25.2291 48.0378 25.4045C48.0381 25.5042 48.0383 25.604 48.0385 25.7067C47.9933 26.0135 47.9036 26.1414 47.6874 26.3593C47.4373 26.4843 47.1776 26.4764 46.9061 26.4374C46.6866 26.2973 46.5538 26.2015 46.4374 25.9686C46.4281 25.8434 46.4236 25.7179 46.4213 25.5923C46.4198 25.5141 46.4182 25.4359 46.4166 25.3554C46.4147 25.2284 46.4147 25.2284 46.4127 25.0989C46.411 25.0124 46.4094 24.9259 46.4077 24.8368C46.4026 24.5598 46.398 24.2828 46.3934 24.0057C46.3901 23.8183 46.3867 23.6308 46.3832 23.4433C46.3748 22.983 46.3669 22.5227 46.3593 22.0624C46.0566 22.2289 45.7539 22.3954 45.4514 22.5621C45.349 22.6185 45.2466 22.6749 45.1441 22.7312C44.9947 22.8133 44.8454 22.8956 44.6961 22.9779C44.6466 23.0052 44.5971 23.0324 44.5461 23.0605C44.2893 23.2024 44.0338 23.3463 43.78 23.4934C43.7298 23.5224 43.6796 23.5514 43.628 23.5813C43.4892 23.6619 43.3507 23.7429 43.2122 23.824C42.9999 23.9374 42.9999 23.9374 42.8436 23.9374C42.8444 24.0166 42.8444 24.0166 42.8452 24.0974C42.8504 24.6474 42.8539 25.1974 42.8565 25.7475C42.8577 25.9527 42.8593 26.1579 42.8613 26.3631C42.8642 26.6582 42.8655 26.9534 42.8665 27.2485C42.8677 27.3401 42.8689 27.4317 42.8702 27.526C42.8704 28.3318 42.8704 28.3318 42.6093 28.703C42.4158 28.8471 42.4158 28.8471 42.1698 28.9765C42.0724 29.0285 41.9751 29.0807 41.8778 29.133C41.8219 29.1626 41.766 29.1922 41.7085 29.2228C41.4808 29.3469 41.2574 29.4774 41.0336 29.6085C40.8606 29.7087 40.6876 29.8089 40.5145 29.9091C40.4316 29.9581 40.3487 30.0072 40.2633 30.0577C39.7827 30.3324 39.417 30.4977 38.8593 30.4999C38.6243 30.4049 38.5128 30.3385 38.382 30.1224C38.3057 29.9367 38.2909 29.8021 38.2875 29.602C38.2859 29.5332 38.2844 29.4644 38.2828 29.3935C38.2814 29.2831 38.2814 29.2831 38.28 29.1705C38.2778 29.0568 38.2778 29.0568 38.2755 28.9407C38.2708 28.6987 38.2672 28.4567 38.2636 28.2147C38.2606 28.0505 38.2575 27.8864 38.2544 27.7222C38.2469 27.32 38.2403 26.9177 38.2343 26.5155C38.1888 26.5414 38.1434 26.5672 38.0966 26.5939C37.2258 27.089 36.3534 27.5811 35.4755 28.0634C35.4019 28.1041 35.3283 28.1448 35.2525 28.1867C35.1846 28.2239 35.1167 28.261 35.0467 28.2993C34.9869 28.3321 34.9272 28.3649 34.8656 28.3987C34.7186 28.4686 34.7186 28.4686 34.5624 28.4686C34.5882 32.6968 34.614 36.9249 34.6405 41.2811C36.3424 40.3709 36.3424 40.3709 38.0324 39.4405C38.4669 39.1983 38.9023 38.958 39.3378 38.7177C39.4109 38.6773 39.4109 38.6773 39.4854 38.6361C40.144 38.2725 40.8044 37.9125 41.4667 37.5556C42.0666 37.2322 42.6617 36.9018 43.2538 36.5643C44.2779 35.9807 45.3182 35.4275 46.3593 34.8749C46.3604 34.7253 46.3604 34.7253 46.3615 34.5727C46.3646 34.2021 46.3697 33.8316 46.3755 33.4611C46.3777 33.3008 46.3793 33.1405 46.3804 32.9803C46.3821 32.7496 46.3858 32.5191 46.3898 32.2885C46.3899 32.2171 46.39 32.1456 46.3901 32.072C46.3976 31.7427 46.4091 31.5611 46.586 31.2759C46.8169 31.0632 46.9784 31.0538 47.2821 31.0358C47.5235 31.0513 47.6606 31.1259 47.8436 31.2811C48.0158 31.5394 48.0204 31.6224 48.0238 31.9232C48.0251 32.0064 48.0263 32.0896 48.0276 32.1753C48.028 32.2651 48.0284 32.355 48.0289 32.4475C48.0296 32.5399 48.0303 32.6323 48.031 32.7275C48.0322 32.923 48.0328 33.1186 48.0331 33.3142C48.0341 33.6134 48.0379 33.9125 48.0419 34.2117C48.0426 34.4017 48.0432 34.5916 48.0435 34.7815C48.0451 34.871 48.0466 34.9606 48.0482 35.0528C48.0446 35.674 48.0446 35.674 47.8185 35.9788C47.7149 36.0511 47.7149 36.0511 47.6093 36.1249C47.5639 36.1566 47.5185 36.1884 47.4718 36.2211C47.4293 36.2438 47.3869 36.2666 47.3432 36.29C47.2927 36.3175 47.2422 36.345 47.1902 36.3734C47.1351 36.4026 47.0801 36.4317 47.0233 36.4618C46.8974 36.5301 46.7714 36.5985 46.6455 36.6669C46.5407 36.7234 46.5407 36.7234 46.4338 36.781C46.1323 36.9445 45.8323 37.1107 45.5322 37.2769C45.4852 37.3029 45.4382 37.3289 45.3898 37.3558C45.3421 37.3822 45.2945 37.4086 45.2454 37.4357C44.4893 37.8542 43.7313 38.2686 42.9706 38.6786C42.3707 39.0019 41.7755 39.3324 41.1835 39.6698C40.4725 40.0749 39.7535 40.4639 39.0311 40.8481C38.4089 41.1793 37.7917 41.5177 37.1796 41.8671C36.8804 42.0369 36.5809 42.2061 36.2811 42.3749C36.236 42.4003 36.1909 42.4258 36.1444 42.452C35.8505 42.6177 35.5557 42.7817 35.2598 42.944C35.1638 42.9969 35.0682 43.0503 34.9727 43.1041C34.8392 43.1794 34.7046 43.2528 34.57 43.3261C34.4931 43.3688 34.4161 43.4114 34.3369 43.4553C33.9237 43.6106 33.6073 43.6006 33.2049 43.4444C33.1189 43.397 33.0329 43.3496 32.9443 43.3008C32.897 43.2752 32.8498 43.2496 32.801 43.2232C32.6485 43.1402 32.4971 43.0554 32.3456 42.9706C32.2393 42.9123 32.133 42.8541 32.0265 42.796C31.7694 42.6553 31.5131 42.5132 31.2571 42.3704C31.0845 42.2742 30.9114 42.179 30.7382 42.0838C30.5225 41.9648 30.3073 41.845 30.0925 41.7246C29.6012 41.4493 29.1081 41.1773 28.6151 40.9052C28.5422 40.8649 28.5422 40.8649 28.4678 40.8238C27.7231 40.4128 26.9761 40.0062 26.2276 39.6019C25.6702 39.3006 25.1156 38.9945 24.5621 38.6859C24.1137 38.4361 23.6646 38.1876 23.2152 37.9395C23.1175 37.8855 23.0198 37.8315 22.9221 37.7775C22.402 37.4901 21.8811 37.2043 21.3574 36.9235C21.2719 36.8776 21.1865 36.8318 21.0984 36.7845C20.9381 36.6986 20.7777 36.6132 20.617 36.5281C19.7188 36.0471 19.7188 36.0471 19.5624 35.7343C19.5558 35.5869 19.554 35.4393 19.5548 35.2918C19.5551 35.1603 19.5551 35.1603 19.5555 35.0263C19.5565 34.8885 19.5565 34.8885 19.5575 34.7479C19.5579 34.6555 19.5582 34.563 19.5586 34.4678C19.5595 34.2389 19.5608 34.01 19.5624 33.7811C19.4348 33.7824 19.4348 33.7824 19.3045 33.7838C18.5022 33.7917 17.6999 33.7975 16.8975 33.8014C16.485 33.8034 16.0725 33.8062 15.6601 33.8106C15.2619 33.8149 14.8638 33.8172 14.4656 33.8182C14.3138 33.8189 14.162 33.8203 14.0102 33.8224C13.7973 33.8253 13.5846 33.8257 13.3717 33.8255C13.3091 33.8269 13.2465 33.8283 13.182 33.8297C12.8641 33.8268 12.6667 33.7966 12.414 33.5953C12.2186 33.3905 12.2186 33.3905 12.1591 33.1952C12.1696 32.8417 12.1795 32.6626 12.3944 32.37C12.7674 32.1072 13.1223 32.1296 13.5668 32.1316C13.6641 32.1316 13.6641 32.1316 13.7632 32.1316C13.9771 32.1317 14.191 32.1323 14.4049 32.1329C14.5534 32.133 14.7018 32.1331 14.8502 32.1332C15.2407 32.1335 15.6311 32.1343 16.0216 32.1351C16.4902 32.1361 16.9588 32.1364 17.4274 32.1369C18.139 32.1377 18.8507 32.1392 19.5624 32.1405C19.5624 30.8257 19.5624 29.5108 19.5624 28.1561C19.2173 28.1607 18.8721 28.1652 18.5166 28.1699C18.2409 28.1724 17.9653 28.1745 17.6897 28.1764C17.399 28.1784 17.1083 28.1812 16.8176 28.1856C16.5375 28.1899 16.2574 28.1922 15.9772 28.1932C15.8705 28.1939 15.7637 28.1953 15.657 28.1974C14.8219 28.2133 14.8219 28.2133 14.5668 28.0721C14.3607 27.8724 14.2575 27.676 14.2255 27.3944C14.2565 27.0713 14.3547 26.9188 14.5624 26.6718C14.8549 26.5226 15.0946 26.4964 15.4205 26.4978C15.5589 26.4978 15.5589 26.4978 15.7 26.4978C15.8483 26.499 15.8483 26.499 15.9995 26.5003C16.1521 26.5006 16.1521 26.5006 16.3078 26.5009C16.5774 26.5015 16.847 26.5031 17.1166 26.5048C17.392 26.5064 17.6675 26.5071 17.943 26.5079C18.4828 26.5095 19.0226 26.5125 19.5624 26.5155C19.5624 25.6132 19.5624 24.7108 19.5624 23.7811C19.2804 23.7832 18.9985 23.7852 18.708 23.7873C17.7772 23.7938 16.8464 23.7981 15.9156 23.8014C15.3511 23.8034 14.7867 23.8061 14.2223 23.8106C13.7303 23.8145 13.2383 23.817 12.7463 23.8179C12.4858 23.8184 12.2254 23.8198 11.9649 23.8224C11.674 23.8253 11.3832 23.8257 11.0923 23.8255C10.9629 23.8276 10.9629 23.8276 10.8309 23.8297C10.2459 23.8258 10.2459 23.8258 9.9404 23.5928C9.70768 23.265 9.70376 23.0941 9.7516 22.7026C9.79676 22.5311 9.79676 22.5311 9.98231 22.3358C10.2668 22.1733 10.475 22.1308 10.797 22.1311C10.9128 22.131 10.9128 22.131 11.031 22.1308C11.1156 22.1311 11.2003 22.1314 11.2875 22.1316C11.3766 22.1316 11.4658 22.1316 11.5577 22.1316C11.8532 22.1317 12.1487 22.1323 12.4442 22.1329C12.6488 22.133 12.8534 22.1331 13.058 22.1332C13.5419 22.1335 14.0258 22.1341 14.5097 22.1349C15.0607 22.1358 15.6116 22.1362 16.1625 22.1366C17.2958 22.1374 18.4291 22.1388 19.5624 22.1405C19.5599 22.0584 19.5599 22.0584 19.5574 21.9746C19.5509 21.7255 19.5469 21.4765 19.5429 21.2274C19.5402 21.1413 19.5376 21.0551 19.5349 20.9663C19.5272 20.3258 19.5272 20.3258 19.7065 20.0188C19.9055 19.8487 20.102 19.7286 20.3345 19.6079C20.4249 19.5603 20.5153 19.5127 20.6085 19.4637C20.7058 19.4136 20.803 19.3635 20.9003 19.3134C21.0007 19.2608 21.1011 19.2081 21.2014 19.1553C21.3512 19.0764 21.501 18.9976 21.6511 18.9191C22.0241 18.724 22.3935 18.5233 22.7606 18.3173C22.8702 18.256 22.9797 18.1948 23.0893 18.1336C23.1479 18.1008 23.2065 18.068 23.2668 18.0343C23.7012 17.7921 24.1367 17.5518 24.5722 17.3114C24.6206 17.2846 24.6691 17.2579 24.7191 17.2303C25.4709 16.8152 26.2253 16.4052 26.9811 15.9975C27.3725 15.7859 27.7613 15.5714 28.1464 15.3485C28.6499 15.0573 29.1619 14.7832 29.6747 14.5087C30.4287 14.1049 31.1768 13.6922 31.9199 13.2685C32.0555 13.1912 32.1914 13.1144 32.3275 13.038C32.4686 12.9575 32.608 12.8741 32.746 12.7884C33.3081 12.4517 33.7541 12.2884 34.386 12.5375ZM33.3496 14.3637C33.277 14.4052 33.2043 14.4467 33.1295 14.4894C33.0512 14.5344 32.973 14.5795 32.8925 14.6259C32.7299 14.7187 32.5672 14.8115 32.4045 14.9042C32.3218 14.9513 32.2392 14.9984 32.154 15.047C31.7753 15.2615 31.3942 15.4714 31.0126 15.6806C30.9451 15.7175 30.8777 15.7545 30.8082 15.7926C30.6534 15.8774 30.4985 15.9622 30.3436 16.0468C30.5422 16.2732 30.7649 16.3933 31.03 16.5329C31.1207 16.581 31.2113 16.6291 31.3048 16.6786C31.3527 16.7038 31.4006 16.7289 31.4499 16.7548C31.7011 16.8868 31.9516 17.0202 32.2022 17.1533C32.2764 17.1927 32.2764 17.1927 32.3522 17.2329C32.725 17.4308 33.0954 17.6326 33.4638 17.8388C33.5168 17.8684 33.5698 17.898 33.6244 17.9286C33.7396 17.9929 33.8548 18.0573 33.9699 18.1217C34.4044 18.3639 34.8398 18.6042 35.2753 18.8446C35.3482 18.8849 35.3482 18.8849 35.4225 18.9259C36.1673 19.337 36.9143 19.7436 37.6628 20.1479C38.052 20.3583 38.4408 20.5694 38.8272 20.7848C38.936 20.8452 39.0451 20.905 39.1545 20.9641C39.4843 21.1437 39.8038 21.334 40.1201 21.5367C41.157 22.2801 41.157 22.2801 42.3279 22.5159C42.5984 22.4061 42.8149 22.2289 43.0408 22.0468C43.4292 21.7644 43.8636 21.5534 44.2865 21.3274C44.5418 21.1901 44.795 21.0489 45.0482 20.9076C45.1352 20.8592 45.2221 20.8108 45.3117 20.761C45.4049 20.7091 45.4049 20.7091 45.4999 20.6561C45.2781 20.4729 45.0665 20.3079 44.8096 20.1779C44.725 20.1345 44.725 20.1345 44.6387 20.0901C44.5781 20.0594 44.5174 20.0286 44.455 19.997C43.886 19.7032 43.3263 19.3967 42.7704 19.079C42.0975 18.6951 41.4182 18.3245 40.7343 17.9608C39.9915 17.5658 39.2557 17.1604 38.5251 16.7432C37.8932 16.3838 37.2531 16.0406 36.6112 15.6997C35.8667 15.304 35.1306 14.8954 34.4006 14.4733C34.3314 14.4335 34.2621 14.3937 34.1907 14.3527C34.1301 14.3176 34.0696 14.2826 34.0072 14.2464C33.7315 14.1073 33.6022 14.2186 33.3496 14.3637ZM27.9462 17.3358C27.8988 17.3619 27.8514 17.388 27.8026 17.4149C27.6858 17.4792 27.5694 17.5442 27.453 17.6093C27.453 17.6608 27.453 17.7124 27.453 17.7655C27.5825 17.8324 27.5825 17.8324 27.7146 17.9007C28.4144 18.2647 29.1067 18.6391 29.7919 19.0302C30.4648 19.414 31.144 19.7846 31.828 20.1483C32.5708 20.5434 33.3066 20.9488 34.0372 21.366C34.6691 21.7253 35.3094 22.0684 35.9512 22.4096C36.822 22.873 37.6818 23.3541 38.5373 23.845C38.8331 24.032 38.8331 24.032 39.1635 24.0787C39.3766 23.9969 39.572 23.8954 39.7723 23.786C39.8484 23.745 39.9244 23.704 40.0028 23.6618C40.1959 23.5638 40.1959 23.5638 40.2655 23.3905C40.2039 23.358 40.1423 23.3254 40.0789 23.2919C38.9779 22.7093 37.8804 22.1233 36.7988 21.5051C36.2151 21.1727 35.6242 20.8544 35.0311 20.539C34.362 20.1831 33.6972 19.8211 33.0389 19.4452C32.2772 19.0102 31.5061 18.5942 30.7315 18.1825C30.1676 17.8823 29.6072 17.5773 29.0567 17.2527C28.5962 16.9861 28.3853 17.0894 27.9462 17.3358ZM25.0214 18.952C24.9564 18.9863 24.8914 19.0205 24.8245 19.0558C24.2787 19.3456 23.7385 19.6448 23.2001 19.9481C23.1229 19.9915 23.0457 20.0349 22.9661 20.0796C22.8573 20.1412 22.8573 20.1412 22.7463 20.2042C22.6821 20.2405 22.6179 20.2769 22.5518 20.3143C22.3797 20.4189 22.2212 20.5325 22.0624 20.6561C22.1213 20.6875 22.1802 20.719 22.2409 20.7513C23.3165 21.3252 24.3902 21.9017 25.4543 22.4967C25.8887 22.7389 26.3242 22.9792 26.7597 23.2196C26.8325 23.2599 26.8325 23.2599 26.9069 23.3009C27.6517 23.712 28.3987 24.1186 29.1472 24.5229C29.5914 24.763 30.0344 25.0051 30.4755 25.2509C30.5288 25.2806 30.5821 25.3103 30.637 25.3409C30.7546 25.4063 30.8721 25.4718 30.9896 25.5373C31.4077 25.7701 31.826 26.0026 32.2447 26.2345C32.347 26.2912 32.4492 26.348 32.5514 26.4049C32.6956 26.4851 32.8399 26.565 32.9843 26.6449C33.0682 26.6915 33.1522 26.7381 33.2386 26.7861C33.5406 26.9446 33.5406 26.9446 33.8593 27.0624C34.0763 26.9709 34.2557 26.8767 34.455 26.7548C34.5786 26.6825 34.7023 26.6104 34.8261 26.5384C34.8946 26.498 34.9632 26.4575 35.0339 26.4158C35.4401 26.1796 35.852 25.9537 36.2632 25.7265C36.4967 25.5974 36.7298 25.4677 36.9629 25.3381C37.1002 25.2619 37.2376 25.1856 37.3749 25.1093C37.1764 24.8828 36.9536 24.7627 36.6885 24.6231C36.5979 24.575 36.5072 24.527 36.4138 24.4774C36.3419 24.4397 36.3419 24.4397 36.2686 24.4012C36.0174 24.2692 35.7669 24.1358 35.5164 24.0027C35.4669 23.9764 35.4174 23.9502 35.3664 23.9231C34.9935 23.7252 34.6231 23.5235 34.2548 23.3173C34.2018 23.2876 34.1487 23.258 34.0941 23.2275C33.9789 23.1631 33.8638 23.0987 33.7486 23.0343C33.3142 22.7921 32.8787 22.5518 32.4432 22.3114C32.3947 22.2846 32.3461 22.2578 32.296 22.2301C31.5512 21.8191 30.8042 21.4124 30.0557 21.0082C29.5006 20.7081 28.9484 20.4033 28.3972 20.0961C27.9123 19.8259 27.4268 19.5567 26.9411 19.288C26.8366 19.2302 26.7323 19.1723 26.6279 19.1144C26.4814 19.0331 26.3347 18.9519 26.1881 18.8709C26.1025 18.8235 26.0169 18.7761 25.9288 18.7272C25.5763 18.5418 25.3484 18.7795 25.0214 18.952ZM21.1249 21.9843C21.1249 26.2382 21.1249 30.4921 21.1249 34.8749C22.5631 35.6899 22.5631 35.6899 24.0155 36.4765C24.7586 36.8709 25.4941 37.2769 26.2247 37.6941C26.8111 38.0276 27.4044 38.3472 27.9999 38.664C28.6722 39.0216 29.3403 39.3853 30.0018 39.7626C30.6678 40.1424 31.3387 40.5121 32.0136 40.8759C32.1028 40.9241 32.1921 40.9724 32.2841 41.0221C32.3663 41.0662 32.4484 41.1103 32.533 41.1557C32.6062 41.1951 32.6795 41.2344 32.7549 41.275C32.9022 41.3651 32.9022 41.3651 32.9999 41.3593C32.9999 37.1054 32.9999 32.8515 32.9999 28.4686C32.3296 28.1077 31.6593 27.7468 30.9686 27.3749C30.5676 27.153 30.1669 26.9308 29.7667 26.7074C29.3314 26.465 28.8951 26.2241 28.4589 25.9833C28.386 25.9431 28.386 25.9431 28.3117 25.902C27.5669 25.491 26.8198 25.0843 26.0714 24.68C25.5156 24.3796 24.9626 24.0744 24.4107 23.7668C23.9366 23.5026 23.4618 23.2396 22.9867 22.977C22.886 22.9213 22.7854 22.8656 22.6848 22.8098C22.5423 22.7308 22.3997 22.652 22.2571 22.5733C22.1744 22.5275 22.0917 22.4817 22.0065 22.4346C21.7158 22.2785 21.42 22.1318 21.1249 21.9843ZM39.953 25.4999C39.953 26.4022 39.953 27.3046 39.953 28.2343C40.3855 28.0613 40.794 27.8323 41.203 27.6093C41.203 26.7069 41.203 25.8046 41.203 24.8749C40.7372 24.8749 40.3641 25.2807 39.953 25.4999Z\",\n    fill: \"#A47087\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.35737 32.1212C9.41538 32.1196 9.47339 32.118 9.53315 32.1163C9.9137 32.1136 10.1696 32.1664 10.4999 32.3751C10.6717 32.5869 10.7284 32.7258 10.7685 32.9952C10.7253 33.2979 10.61 33.4653 10.4218 33.7032C10.112 33.8581 9.72739 33.8061 9.38667 33.8106C9.26506 33.815 9.26506 33.815 9.141 33.8195C8.46838 33.8272 8.46838 33.8272 8.18031 33.6086C7.93762 33.3154 7.93637 33.1617 7.95875 32.7953C8.02219 32.5092 8.15531 32.3846 8.39057 32.2188C8.70789 32.1187 9.02748 32.1235 9.35737 32.1212Z\",\n    fill: \"#A47087\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.375 26.5938C12.6063 26.7956 12.734 26.9204 12.8004 27.2188C12.8168 27.5073 12.774 27.6744 12.6191 27.9171C12.3467 28.1814 12.1378 28.1868 11.7704 28.1844C11.4902 28.1399 11.3696 27.9843 11.2031 27.7657C11.0912 27.5418 11.101 27.3897 11.125 27.1407C11.2608 26.8792 11.3668 26.7159 11.6181 26.5596C11.9047 26.4997 12.0925 26.5131 12.375 26.5938Z\",\n    fill: \"#A47087\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M47.6874 28.0001C47.9059 28.1706 47.9819 28.286 48.0289 28.5592C48.0466 28.8805 48.0269 29.0507 47.8534 29.3282C47.5977 29.5689 47.417 29.5887 47.0655 29.5855C46.8178 29.5499 46.6859 29.4256 46.5156 29.2501C46.3804 28.9797 46.3997 28.6863 46.4374 28.3907C46.749 27.875 47.1415 27.8601 47.6874 28.0001Z\",\n    fill: \"#A47087\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_1_201\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 40,\n    height: 40,\n    fill: \"white\",\n    transform: \"translate(8 8)\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgDelivery);\nexport default __webpack_public_path__ + \"static/media/delivery.7388c5d82739d3e3e6eef0b7b9bfb273.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useRef } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { ReactComponent as PersonImage } from \"../../assets/images/landig/person.svg\";\nimport { ReactComponent as BouquetImage } from \"../../assets/images/landig/bouquet.svg\";\nimport { ReactComponent as GeoImage } from \"../../assets/images/landig/geo.svg\";\nimport { ReactComponent as DeliveryImage } from \"../../assets/images/landig/delivery.svg\";\n\nimport \"../../styles/advantages.scss\";\n\nconst advantagesData = [\n  { icon: PersonImage, firstText: \"15+\", secondText: \"років бізнес-досвіду\" },\n  {\n    icon: BouquetImage,\n    firstText: \"26+\",\n    secondText: \"років досвіду у флористиці\",\n  },\n  { icon: GeoImage, firstText: \"1 км\", secondText: \"від центру Львова\" },\n  {\n    icon: DeliveryImage,\n    firstText: \"200 грн\",\n    secondText: \"доставка по Львову\",\n  },\n];\n\nexport default function Advantages({ setAdvantagesRef }) {\n  const advantagesRef = useRef(null);\n  useEffect(() => {\n    setAdvantagesRef(advantagesRef.current);\n  }, [setAdvantagesRef]);\n\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"advantages\" ref={advantagesRef}>\n      <div className=\"advantages__about\">\n        <div className=\"advantages__text\">\n          <p className=\"advantages__title\">{t(\"advantages.title.title\")}</p>\n          <p className=\"advantages__subtitle-1\">\n            {t(\"advantages.title.subtitle_1\")}\n          </p>\n          <p className=\"advantages__subtitle-2\">\n            {t(\"advantages.title.subtitle_2\")}\n          </p>\n        </div>\n\n        <div className=\"advantages__points\">\n          {t(\"advantages.points\", { returnObjects: true }).map(\n            (item, index) => (\n              <AdvantagesPoint key={index} {...item} />\n            )\n          )}\n        </div>\n      </div>\n      <div className=\"advantages__line\"></div>\n    </div>\n  );\n}\n\nfunction AdvantagesPoint({ icon, firstText, secondText }) {\n  let IconComponent;\n\n  switch (icon.trim()) {\n    case \"PersonImage\":\n      IconComponent = PersonImage;\n      break;\n    case \"BouquetImage\":\n      IconComponent = BouquetImage;\n      break;\n    case \"GeoImage\":\n      IconComponent = GeoImage;\n      break;\n    case \"DeliveryImage\":\n      IconComponent = DeliveryImage;\n      break;\n    default:\n      IconComponent = null;\n  }\n\n  return (\n    <div className=\"advantages__point\">\n      {IconComponent && (\n        <IconComponent className=\"advantages__point-img\" alt=\"icon\" />\n      )}\n      <p className=\"advantages__text-point\">\n        <span>{firstText}</span>\n        <span>{secondText}</span>\n      </p>\n    </div>\n  );\n}\n","var _g, _defs;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgCatalogPagePrev(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 40,\n    height: 41,\n    viewBox: \"0 0 40 41\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_1_93)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.76101 21.3173L28.6304 40.6585C29.0747 41.1138 29.7872 41.1138 30.2315 40.6585C30.6758 40.2031 30.6758 39.4727 30.2315 39.0173L12.1668 20.5011L30.2315 1.9848C30.6758 1.52942 30.6758 0.799076 30.2315 0.343689C30.0135 0.120289 29.7201 0 29.4351 0C29.1501 0 28.8567 0.111698 28.6388 0.343689L9.76939 19.6848C9.32511 20.1316 9.32511 20.8705 9.76101 21.3173Z\",\n    fill: \"#B0B0B0\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_1_93\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 40,\n    height: 41,\n    fill: \"white\",\n    transform: \"matrix(-1 0 0 -1 40 41)\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCatalogPagePrev);\nexport default __webpack_public_path__ + \"static/media/catalog-page-prev.df2f39aa2c2f1d6da886c36df0a9d4e7.svg\";\nexport { ForwardRef as ReactComponent };","var _g, _defs;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgCatalogPageNext(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 40,\n    height: 41,\n    viewBox: \"0 0 40 41\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_1_90)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30.239 19.6827L11.3696 0.341541C10.9253 -0.113847 10.2128 -0.113847 9.76851 0.341541C9.32423 0.79693 9.32423 1.52727 9.76851 1.98266L27.8332 20.4989L9.76851 39.0152C9.32423 39.4706 9.32423 40.2009 9.76851 40.6563C9.98646 40.8797 10.2799 41 10.5649 41C10.8499 41 11.1433 40.8883 11.3612 40.6563L30.2306 21.3152C30.6749 20.8684 30.6749 20.1295 30.239 19.6827Z\",\n    fill: \"#B0B0B0\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_1_90\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 40,\n    height: 41,\n    fill: \"white\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCatalogPageNext);\nexport default __webpack_public_path__ + \"static/media/catalog-page-next.9a3a024ecdf375deb1981f65463fd13d.svg\";\nexport { ForwardRef as ReactComponent };","import { useTranslation } from \"react-i18next\";\n\nimport BouquetIMG from \"../../assets/images/temp/bouquet.jpg\";\nimport Bouquet2IMG from \"../../assets/images/temp/bouquet2.jpg\";\nimport Bouquet3IMG from \"../../assets/images/temp/bouquet3.jpg\";\nimport { ReactComponent as PrevIMG } from \"../../assets/images/landig/catalog-page-prev.svg\";\nimport { ReactComponent as NextIMG } from \"../../assets/images/landig/catalog-page-next.svg\";\n\nimport \"../../styles/landing-main.scss\";\nimport \"../../styles/catalog-main.scss\";\nimport \"../../styles/catalog-item.scss\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect, useRef, useState } from \"react\";\n\nconst data = [\n  { img: BouquetIMG, title: \"Білунд\", price: \"3390 грн.\" },\n  { img: Bouquet2IMG, title: \"Новара\", price: \"3390 грн.\" },\n  { img: Bouquet2IMG, title: \"Новара\", price: \"3390 грн.\" },\n  { img: BouquetIMG, title: \"Білунд\", price: \"3390 грн.\" },\n  { img: BouquetIMG, title: \"Білунд\", price: \"3390 грн.\" },\n  { img: Bouquet2IMG, title: \"Новара\", price: \"3390 грн.\" },\n  { img: Bouquet2IMG, title: \"Новара\", price: \"3390 грн.\" },\n  { img: Bouquet2IMG, title: \"Новара\", price: \"3390 грн.\" },\n  { img: Bouquet2IMG, title: \"Новара\", price: \"3390 грн.\" },\n  { img: Bouquet2IMG, title: \"Новара\", price: \"3390 грн.\" },\n];\n\nexport default function CatalogMain({ setCatalogRef }) {\n  const itemsRef = useRef(null);\n  const catalogRef = useRef(null);\n\n  useEffect(() => {\n    setCatalogRef(catalogRef.current);\n  }, [setCatalogRef]);\n\n  const handleScroll = (scrollOffset) => {\n    if (itemsRef.current) {\n      const currentCard = 3;\n      const computedStyle = getComputedStyle(itemsRef.current);\n      const paddingLeft = parseFloat(computedStyle.paddingLeft);\n      const paddingRight = parseFloat(computedStyle.paddingRight);\n      const gridGap = parseFloat(computedStyle.getPropertyValue(\"grid-gap\"));\n      parseFloat(computedStyle.getPropertyValue(\"grid-auto-columns\"));\n      const columnWidth =\n        currentCard *\n        ((itemsRef.current.offsetWidth -\n          2 * gridGap -\n          paddingLeft -\n          paddingRight) /\n          3 +\n          gridGap);\n      const newScrollLeft =\n        itemsRef.current.scrollLeft + scrollOffset * columnWidth;\n      itemsRef.current.scrollTo({\n        left: newScrollLeft,\n        behavior: \"smooth\",\n      });\n    }\n  };\n\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"catalog-main\" ref={catalogRef}>\n      <div className=\"catalog-main__header\">\n        <span className=\"catalog-main__title\">{t(\"mainCatalog.title\")}</span>\n        <span className=\"catalog-main__more\">{t(\"mainCatalog.more\")}</span>\n      </div>\n      <div className=\"catalog-main__cover-items\">\n        <div className=\"catalog-main__items\" ref={itemsRef}>\n          <PrevIMG\n            className=\"catalog-main__prev\"\n            onClick={() => handleScroll(-1)}\n          />\n          {data.map((item, index) => (\n            <CatalogItem\n              key={index}\n              img={item.img}\n              title={item.title}\n              price={item.price}\n            />\n          ))}\n          <NextIMG\n            className=\"catalog-main__next\"\n            onClick={() => handleScroll(1)}\n          />\n        </div>\n      </div>\n\n      <div className=\"catalog-main__line\"></div>\n    </div>\n  );\n}\n\nfunction CatalogItem({ img, title, price }) {\n  const dispatch = useDispatch();\n  const addInBasket = () => {\n    dispatch({ type: \"ADD_GOODS\", payload: 1 });\n  };\n  const { t } = useTranslation();\n  return (\n    <div className=\"catalog-item\">\n      <div className=\"catalog-item__flash\"></div>\n      <img src={img} draggable=\"false\" className=\"catalog-item__img\" />\n      <span className=\"catalog-item__title\">{title}</span>\n      <span className=\"catalog-item__price\">{price}</span>\n      <div className=\"catalog-item__buttons\">\n        <a className=\"catalog-item__bout\">{t(\"mainCatalog.about\")}</a>\n        <a onClick={addInBasket} className=\"catalog-item__basket\">\n          {t(\"mainCatalog.basket\")}\n        </a>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport \"../../styles/act.scss\";\n\nexport default function Act() {\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"act\">\n      <div className=\"act__content\">\n        <p className=\"act__title\">{t(\"act.title\")}</p>\n        <p className=\"act__subtitle\">\n        {t(\"act.subtitle\")}\n        </p>\n        <a className=\"act__button\">{t(\"act.button\")}</a>\n      </div>\n      <div className=\"act__line\"></div>\n    </div>\n  );\n}\n","import React, { useEffect, useRef } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport AvatarIMG from \"../../assets/images/temp/avatar.jpg\";\n\nimport \"../../styles/response.scss\";\nimport \"../../styles/response-item.scss\";\n\nfunction ResponseItem({ img, text, username }) {\n  const textWithLineBreaks = text.split(\"\\n\").map((line, index) => (\n    <React.Fragment key={index}>\n      {line}\n      <br />\n    </React.Fragment>\n  ));\n\n  return (\n    <div className=\"response-item\">\n      <p className=\"response-item__text\">{textWithLineBreaks}</p>\n      <div className=\"response-item__img\">\n        <img\n          className=\"response-item__avatar\"\n          src={img}\n          draggable=\"false\"\n          alt=\"User avatar\"\n        />\n      </div>\n      <p className=\"response-item__username\">{username}</p>\n    </div>\n  );\n}\n\nexport default function Response({ setReviewRef }) {\n  const reviewRef = useRef(null);\n  useEffect(() => {\n    setReviewRef(reviewRef.current);\n  }, [setReviewRef]);\n\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"response\" ref={reviewRef}>\n      <div className=\"response__content\">\n        <div className=\"response__title\">{t(\"response.title\")}</div>\n        <div className=\"response__items\">\n          <ResponseItem\n            img={AvatarIMG}\n            text={\n              \"Дуже чудовий сервіс.\\nШвидко відповідають на повідомлення та вчасно виконують замовлення відповідно до усіх побажань))\"\n            }\n            username={\"Khrysty\"}\n          />\n          <ResponseItem\n            img={AvatarIMG}\n            text={\n              \"Неймовірне оформлення та дуже швидка доставка!\\nБули враховані всі побажання, які були обговорені при замовленні.\"\n            }\n            username={\"Andrii Bereznyuk\"}\n          />\n          <ResponseItem\n            img={AvatarIMG}\n            text={\n              \"Чудова робота, дякую! \\nТреба було терміново привітати дівчину, лише завдяки вам все встиг, вона просто в захваті!\"\n            }\n            username={\"Denis Khlibov\"}\n          />\n        </div>\n      </div>\n      <div className=\"response__back-block\"></div>\n      <div className=\"response__line\"></div>\n    </div>\n  );\n}\n","var _g, _defs;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgLystvaLogo(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 151,\n    height: 32,\n    viewBox: \"0 0 151 32\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_1_10)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M114.968 0.10959L122.39 26.1822L129.812 0.10959H131.248L122.39 31.2285L113.651 0.10959H114.968ZM137.593 21.4964H146.81L149.564 31.2285H151L142.261 0.10959L133.403 31.2285H134.839L137.593 21.4964ZM146.571 20.2949H137.832L142.261 5.15591L146.571 20.2949ZM39.1921 30.5076V0.10959H40.5089V29.186H49.7265V30.5076H39.1921ZM62.1762 20.2949L54.036 0.10959H55.3528L62.8945 18.3725L70.3164 0.10959H71.6332L63.493 20.2949V30.5076H62.1762V20.2949ZM77.858 6.11711C77.858 -0.491161 87.1953 -2.53371 89.1107 3.95441L87.9136 4.55516C86.2376 -0.731462 79.1748 1.5514 79.1748 6.11711C79.1748 12.9657 90.9063 11.7642 91.3851 22.2173C91.864 32.6703 77.4989 33.1509 76.5412 23.2986L77.7383 22.6979C78.0975 31.2285 90.4275 30.9882 90.0683 22.2173C89.5895 12.4851 77.858 14.6478 77.858 6.11711ZM102.039 1.43125V30.5076H100.722V1.43125H94.737V0.10959H108.025V1.43125H102.039Z\",\n    fill: \"#E5E5E5\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3.60558 12.7442C2.48759 13.957 0.458629 14.0328 0.58285 15.0561C1.16255 15.9657 3.31573 16.6479 5.38609 18.6945C9.65104 22.9393 20.4583 30.9361 20.2927 29.9507C20.1685 29.1548 6.04861 17.6333 5.26187 15.1698C5.22047 15.1319 5.22047 15.1319 5.22047 15.094C5.22047 15.094 5.17906 15.0561 5.17906 15.0182C5.17906 15.0182 5.17906 14.9803 5.17906 14.9424C5.17906 14.9424 5.17906 14.9424 5.13765 14.9424C5.13765 14.9424 5.13765 14.9045 5.13765 14.8666C5.13765 14.8666 5.09624 14.8287 5.09624 14.7908C5.09624 14.7908 5.09624 14.7529 5.09624 14.715C5.05484 14.715 5.05484 14.715 5.05484 14.715C5.05484 14.715 5.05484 14.6771 5.05484 14.6392C4.43373 12.7821 9.69245 6.6423 10.8933 4.63361C11.7214 3.26921 13.6676 0.237223 14.3301 0.0477234C16.8145 -0.710274 16.6075 7.7414 13.0464 12.5926C12.0527 13.9191 9.89949 13.8812 10.0237 14.9045C10.562 15.8141 12.7566 16.4963 14.827 18.5429C21.5349 25.2512 34.7439 35.7873 19.2575 20.2863C16.8973 17.9744 14.9098 15.7762 14.6613 15.0182C14.6613 14.9803 14.6613 14.9803 14.6613 14.9424C14.6199 14.9045 14.6199 14.9045 14.6199 14.8666C14.6199 14.8287 14.6199 14.8287 14.5785 14.7908C14.5785 14.7908 14.5785 14.7529 14.5785 14.715C14.5371 14.715 14.5371 14.6771 14.5371 14.6392C14.5371 14.6392 14.4957 14.6013 14.4957 14.5634C14.4957 14.5634 14.4957 14.5255 14.4957 14.4876C14.2887 13.9191 19.5888 4.74731 20.4583 3.64821C23.1498 0.161423 27.1663 2.47332 24.0194 5.77061C23.274 6.5665 22.6115 7.8551 22.9842 9.71219C23.6881 13.0853 19.4646 14.6771 19.4646 14.7529C20.0029 15.6625 22.5287 16.5721 24.5991 18.6187C26.7108 20.7411 27.0421 22.4087 30.6859 25.1375C31.9282 26.0849 34.2056 27.2977 32.0524 26.8429C27.4976 25.8575 24.5163 22.7119 24.2678 20.9306C23.9366 18.3534 20.1271 16.6858 19.3818 14.9424C19.3818 14.9045 19.3818 14.9045 19.3818 14.8666C19.3403 14.8287 19.3403 14.8287 19.3403 14.7908C19.3403 14.7529 19.2989 14.7529 19.2989 14.715C19.2989 14.6771 19.2989 14.6771 19.2989 14.6392C19.2575 14.6392 19.2575 14.6013 19.2575 14.5634C19.2575 14.5634 19.2161 14.5255 19.2161 14.4876C19.2161 14.4876 19.2161 14.4497 19.2161 14.4118C18.9677 13.7675 26.1311 1.71532 21.038 3.91351C19.0505 4.74731 19.2161 10.5081 17.7669 12.5168C16.7731 13.8433 14.6199 13.8054 14.7441 14.8287C15.2824 15.7383 17.477 16.4205 19.5474 18.4671C21.6177 20.5516 34.7439 36.3179 21.9904 27.1082C20.4998 26.047 17.27 23.0909 14.5371 20.3621C12.1769 18.0502 10.1893 15.852 9.9409 15.094C9.9409 15.0561 9.9409 15.0561 9.9409 15.0182C9.89949 14.9803 9.89949 14.9803 9.89949 14.9424C9.89949 14.9424 9.89949 14.9045 9.85808 14.8666C9.85808 14.8666 9.85808 14.8287 9.85808 14.7908C9.81667 14.7908 9.81667 14.7529 9.81667 14.715C9.81667 14.715 9.81667 14.6771 9.77527 14.6392C9.77527 14.6392 9.77527 14.6013 9.77527 14.5634C9.19556 12.9337 17.27 3.53451 12.3425 4.14091C10.8104 4.33041 12.3011 5.80851 11.7628 8.0825C11.3901 9.5227 8.78149 10.4323 8.32601 12.6684C7.99475 14.336 5.17906 13.957 5.30328 14.9803C5.88298 15.8899 8.03616 16.5721 10.1065 18.6187C17.6426 26.1607 21.6177 29.7612 20.831 30.8224C19.0505 33.0585 1.65944 23.8489 1.49381 23.6973C-0.824997 21.3475 0.789887 16.0036 0.541443 15.2456C0.500036 15.2456 0.500036 15.2077 0.500036 15.1698C0.500036 15.1698 0.458629 15.1319 0.458629 15.094C0.458629 15.094 0.458629 15.0561 0.458629 15.0182C0.417221 15.0182 0.417221 14.9803 0.417221 14.9424C0.417221 14.9424 0.375814 14.9045 0.375814 14.8666C0.375814 14.8666 0.375814 14.8287 0.375814 14.7908C0.334407 14.7908 0.334407 14.7529 0.334407 14.715C0.0445558 13.9191 0.831294 12.6684 1.78366 11.3419C2.32196 10.5839 2.94307 9.7501 3.39855 8.9921C5.09624 7.514 3.60558 12.7442 3.60558 12.7442Z\",\n    fill: \"#E5E5E5\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_1_10\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 151,\n    height: 32,\n    fill: \"white\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgLystvaLogo);\nexport default __webpack_public_path__ + \"static/media/LystvaLogo.0ddb820b0d7f762e0527b0235fe44db3.svg\";\nexport { ForwardRef as ReactComponent };","var _g, _defs;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgPayPal(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 63,\n    height: 26,\n    viewBox: \"0 0 63 26\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_1_16)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2.49049 6C2.30741 6 2.15192 6.188 2.12329 6.44399L0.00415587 25.4538C-0.0035443 25.5233 -0.000518698 25.5942 0.0130213 25.6619C0.0265612 25.7295 0.0503004 25.7922 0.0825977 25.8456C0.114895 25.899 0.154976 25.9419 0.200108 25.9713C0.24524 26.0007 0.294347 26.0159 0.344038 26.016H2.85716C3.03997 26.016 3.19573 25.8276 3.22436 25.572L3.84686 19.9896C3.87522 19.734 4.03098 19.5456 4.21406 19.5456H6.49892C9.16859 19.5456 11.4348 16.7903 11.8488 13.0567C12.2661 9.29147 10.1867 6.00817 7.23936 6H2.49049ZM4.93348 10.2437H6.76158C8.26661 10.2437 8.75675 11.4999 8.60178 12.8891C8.44681 14.2812 7.68562 15.3067 6.2297 15.3067H4.36902L4.93348 10.2437ZM16.9601 11.5359C16.3255 11.5393 15.5953 11.7232 14.7756 12.2062C12.8952 13.3149 11.9922 15.6062 11.6087 17.2766C11.6087 17.2766 10.3881 22.373 13.1458 25.1729C13.1458 25.1729 15.7033 27.8685 18.5823 25.0069L18.5326 25.4538C18.5249 25.5232 18.528 25.5941 18.5415 25.6617C18.555 25.7293 18.5787 25.7919 18.6109 25.8453C18.6431 25.8987 18.6832 25.9416 18.7282 25.9711C18.7733 26.0005 18.8223 26.0158 18.872 26.016H21.2577C21.4408 26.016 21.5963 25.8276 21.6249 25.572L23.0761 12.554C23.0839 12.4845 23.081 12.4135 23.0675 12.3459C23.054 12.2782 23.0303 12.2155 22.9981 12.162C22.9658 12.1085 22.9258 12.0655 22.8807 12.036C22.8356 12.0065 22.7865 11.9912 22.7368 11.9911H20.351C20.168 11.9911 20.0122 12.1794 19.9838 12.4351L19.9058 13.1358C19.9058 13.1358 18.8641 11.5259 16.9601 11.5359ZM17.0381 15.6478C17.3121 15.6478 17.5626 15.7013 17.7875 15.8034C18.8168 16.2708 19.4005 17.6697 19.2316 19.1859C19.0233 21.0529 17.9409 22.4276 16.5527 22.4276C16.279 22.4276 16.0285 22.3745 15.8034 22.2723C14.7743 21.8049 14.187 20.4061 14.3558 18.8898C14.5641 17.0228 15.65 15.6478 17.0381 15.6478Z\",\n    fill: \"#003087\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M36.8462 6C36.6631 6 36.5076 6.188 36.479 6.44399L34.3599 25.4538C34.3522 25.5233 34.3552 25.5942 34.3687 25.6619C34.3823 25.7295 34.406 25.7922 34.4383 25.8456C34.4706 25.899 34.5107 25.9419 34.5558 25.9713C34.601 26.0007 34.6501 26.0159 34.6998 26.016H37.2129C37.3957 26.016 37.5514 25.8276 37.5801 25.572L38.2026 19.9896C38.2309 19.734 38.3867 19.5456 38.5698 19.5456H40.8546C43.5243 19.5456 45.7903 16.7903 46.204 13.0567C46.6216 9.29147 44.5424 6.00817 41.5951 6H36.8462ZM39.2892 10.2437H41.1173C42.6223 10.2437 43.1125 11.4999 42.9575 12.8891C42.8025 14.2812 42.0416 15.3067 40.5854 15.3067H38.7247L39.2892 10.2437ZM51.3156 11.5359C50.681 11.5393 49.9508 11.7232 49.131 12.2062C47.2506 13.3149 46.3476 15.6062 45.9641 17.2766C45.9641 17.2766 44.7441 22.373 47.5017 25.1729C47.5017 25.1729 50.0587 27.8685 52.938 25.0069L52.8884 25.4538C52.8807 25.5233 52.8837 25.5942 52.8972 25.6619C52.9108 25.7295 52.9345 25.7922 52.9668 25.8456C52.9991 25.899 53.0392 25.9419 53.0843 25.9713C53.1295 26.0007 53.1785 26.0159 53.2282 26.016H55.6137C55.7968 26.016 55.9523 25.8276 55.9809 25.572L57.4326 12.554C57.4404 12.4845 57.4375 12.4134 57.4239 12.3457C57.4104 12.278 57.3867 12.2152 57.3544 12.1617C57.3221 12.1082 57.282 12.0652 57.2368 12.0358C57.1916 12.0063 57.1425 11.9911 57.0927 11.9911H54.707C54.5239 11.9911 54.3682 12.1794 54.3398 12.4351L54.2618 13.1358C54.2618 13.1358 53.2196 11.5259 51.3156 11.5359ZM51.3936 15.6478C51.6675 15.6478 51.9181 15.7013 52.1429 15.8034C53.1723 16.2708 53.7559 17.6697 53.587 19.1859C53.3787 21.0529 52.2963 22.4276 50.9082 22.4276C50.6345 22.4276 50.3839 22.3745 50.1588 22.2723C49.1297 21.8049 48.5424 20.4061 48.7113 18.8898C48.9196 17.0228 50.0054 15.6478 51.3936 15.6478Z\",\n    fill: \"#0070E0\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24.2083 11.991C24.0192 11.991 23.8847 12.2522 23.9425 12.5067L26.558 23.9877L24.1931 29.398C24.0783 29.6607 24.2117 29.9999 24.43 29.9999H27.2252C27.3051 29.9998 27.3837 29.9706 27.4533 29.915C27.5229 29.8594 27.5812 29.7794 27.6226 29.6826L34.9274 12.5892C35.0396 12.3265 34.9056 11.9907 34.6887 11.9907H31.8937C31.813 11.9908 31.7337 12.0206 31.6636 12.0772C31.5935 12.1338 31.535 12.2153 31.4939 12.3135L28.6186 19.1803L27.159 12.3644C27.1115 12.1426 26.9667 11.9907 26.8031 11.9907L24.2083 11.991Z\",\n    fill: \"#003087\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M60.1434 6C59.9606 6 59.8049 6.18837 59.7762 6.44399L57.6566 25.4531C57.6488 25.5226 57.6518 25.5936 57.6653 25.6613C57.6788 25.7291 57.7025 25.7918 57.7348 25.8453C57.7671 25.8988 57.8072 25.9418 57.8524 25.9713C57.8976 26.0007 57.9467 26.016 57.9965 26.016H60.5096C60.6924 26.016 60.8482 25.8276 60.8768 25.572L62.9959 6.56214C63.0036 6.49276 63.0006 6.42185 62.9871 6.35427C62.9736 6.2867 62.9499 6.22405 62.9176 6.17065C62.8854 6.11725 62.8454 6.07434 62.8003 6.04488C62.7552 6.01543 62.7062 6.00012 62.6566 6H60.1434Z\",\n    fill: \"#0070E0\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_1_16\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 63,\n    height: 26,\n    fill: \"white\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgPayPal);\nexport default __webpack_public_path__ + \"static/media/PayPal.604620a4f5cd51748821e618c8df0a78.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgVisa2021(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 63,\n    height: 26,\n    viewBox: \"0 0 63 26\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M39.0805 6C34.8204 6 31.0132 8.27193 31.0132 12.4685C31.0132 17.2818 37.7652 17.6142 37.7652 20.0326C37.7652 21.0508 36.6312 21.9622 34.6937 21.9622C31.9447 21.9622 29.8901 20.6887 29.8901 20.6887L29.0108 24.9243C29.0108 24.9243 31.3778 26 34.5201 26C39.1778 26 42.8432 23.6169 42.8432 19.348C42.8432 14.2616 36.0631 13.9391 36.0631 11.695C36.0631 10.8973 36.994 10.0236 38.9255 10.0236C41.1051 10.0236 42.8829 10.9498 42.8829 10.9498L43.7435 6.85946C43.7435 6.85946 41.8084 6 39.0799 6H39.0805ZM0.103303 6.30894L0 6.92619C0 6.92619 1.79219 7.26355 3.40661 7.93704C5.48529 8.70876 5.63303 9.15858 5.98318 10.5537L9.7976 25.6812H14.9111L22.7886 6.30894H17.6871L12.6252 19.4802L10.5598 8.31518C10.3706 7.03741 9.41081 6.30832 8.23664 6.30832H0.103904L0.103303 6.30894ZM24.8402 6.30894L20.8384 25.6812H25.7033L29.6907 6.30894H24.8402ZM51.973 6.30894C50.8 6.30894 50.1784 6.95523 49.7225 8.08409L42.5952 25.6812H47.6967L48.6835 22.7481H54.8985L55.4985 25.6812H60L56.0733 6.30894H51.973ZM52.6366 11.543L54.149 18.8123H50.0979L52.6372 11.543H52.6366Z\",\n    fill: \"#1434CB\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgVisa2021);\nexport default __webpack_public_path__ + \"static/media/Visa_2021.65c576bfc385eecb192b930a1a48d8e7.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgMastercardLogo(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 33,\n    height: 26,\n    viewBox: \"0 0 33 26\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4.38875 25.9563V24.6324C4.38875 24.126 4.07143 23.7943 3.5267 23.7943C3.25433 23.7943 2.95817 23.8817 2.75456 24.1697C2.5959 23.928 2.36848 23.7943 2.02737 23.7943C1.79995 23.7943 1.57254 23.8612 1.39273 24.1028V23.838H0.916748V25.9563H1.39273V24.7866C1.39273 24.4113 1.59634 24.2339 1.91366 24.2339C2.23098 24.2339 2.38964 24.4319 2.38964 24.7866V25.9563H2.86562V24.7866C2.86562 24.4113 3.09303 24.2339 3.38655 24.2339C3.70387 24.2339 3.86253 24.4319 3.86253 24.7866V25.9563H4.38875ZM11.4491 23.838H10.677V23.1979H10.201V23.838H9.76996V24.2571H10.201V25.2288C10.201 25.7147 10.4046 26 10.9493 26C11.1529 26 11.3804 25.9332 11.539 25.8458L11.4015 25.4473C11.264 25.5347 11.1053 25.5578 10.9916 25.5578C10.7642 25.5578 10.6743 25.4242 10.6743 25.2057V24.2571H11.4465V23.838H11.4491ZM15.4896 23.7918C15.2173 23.7918 15.0348 23.9254 14.9211 24.1003V23.8355H14.4451V25.9537H14.9211V24.7609C14.9211 24.4087 15.0798 24.2082 15.3759 24.2082C15.4658 24.2082 15.5795 24.2314 15.6721 24.2519L15.8096 23.8098C15.7144 23.7918 15.5796 23.7918 15.4896 23.7918ZM9.38389 24.0129C9.15648 23.8586 8.83916 23.7918 8.49804 23.7918C7.95331 23.7918 7.59103 24.0566 7.59103 24.4756C7.59103 24.8278 7.8634 25.0283 8.33938 25.0925L8.56679 25.1157C8.81536 25.1594 8.95286 25.2262 8.95286 25.3368C8.95286 25.491 8.7704 25.6015 8.45308 25.6015C8.13577 25.6015 7.88455 25.491 7.72589 25.3805L7.49848 25.7326C7.74705 25.91 8.08817 25.9974 8.42929 25.9974C9.06392 25.9974 9.42884 25.7095 9.42884 25.3136C9.42884 24.9383 9.13268 24.7404 8.6805 24.6735L8.45308 24.6504C8.24947 24.6272 8.09081 24.5835 8.09081 24.4524C8.09081 24.2982 8.24947 24.2108 8.50068 24.2108C8.77305 24.2108 9.04541 24.3213 9.18292 24.3882L9.38389 24.0129ZM22.0476 23.7918C21.7752 23.7918 21.5928 23.9254 21.479 24.1003V23.8355H21.0031V25.9537H21.479V24.7609C21.479 24.4087 21.6377 24.2082 21.9339 24.2082C22.0238 24.2082 22.1375 24.2314 22.23 24.2519L22.3675 23.8149C22.275 23.7918 22.1401 23.7918 22.0476 23.7918ZM15.9656 24.8972C15.9656 25.5373 16.4204 26 17.1238 26C17.4412 26 17.6686 25.9332 17.896 25.7584L17.6686 25.383C17.4861 25.5167 17.3063 25.581 17.1 25.581C16.714 25.581 16.4416 25.3162 16.4416 24.8972C16.4416 24.4987 16.714 24.2339 17.1 24.2134C17.3037 24.2134 17.4861 24.2802 17.6686 24.4113L17.896 24.036C17.6686 23.8586 17.4412 23.7943 17.1238 23.7943C16.4204 23.7918 15.9656 24.2571 15.9656 24.8972ZM20.3684 24.8972V23.838H19.8925V24.1028C19.7338 23.9049 19.5064 23.7943 19.2102 23.7943C18.5967 23.7943 18.1208 24.2571 18.1208 24.8972C18.1208 25.5373 18.5967 26 19.2102 26C19.5275 26 19.7549 25.8895 19.8925 25.6915V25.9563H20.3684V24.8972ZM18.6205 24.8972C18.6205 24.5219 18.8691 24.2134 19.279 24.2134C19.665 24.2134 19.9374 24.5013 19.9374 24.8972C19.9374 25.2725 19.665 25.581 19.279 25.581C18.8717 25.5578 18.6205 25.2699 18.6205 24.8972ZM12.9246 23.7918C12.29 23.7918 11.8352 24.2339 11.8352 24.8946C11.8352 25.5578 12.29 25.9974 12.9484 25.9974C13.2658 25.9974 13.5831 25.91 13.8343 25.7095L13.6069 25.3779C13.4244 25.5116 13.197 25.599 12.9722 25.599C12.6761 25.599 12.3826 25.4653 12.3138 25.0925H13.9242C13.9242 25.0257 13.9242 24.982 13.9242 24.9152C13.9454 24.2339 13.5355 23.7918 12.9246 23.7918ZM12.9246 24.1902C13.2208 24.1902 13.4244 24.3676 13.4694 24.6967H12.335C12.3799 24.4113 12.5835 24.1902 12.9246 24.1902ZM24.7501 24.8972V23H24.2741V24.1028C24.1154 23.9049 23.888 23.7943 23.5919 23.7943C22.9784 23.7943 22.5024 24.2571 22.5024 24.8972C22.5024 25.5373 22.9784 26 23.5919 26C23.9092 26 24.1366 25.8895 24.2741 25.6915V25.9563H24.7501V24.8972ZM23.0022 24.8972C23.0022 24.5219 23.2507 24.2134 23.6606 24.2134C24.0467 24.2134 24.3191 24.5013 24.3191 24.8972C24.3191 25.2725 24.0467 25.581 23.6606 25.581C23.2507 25.5578 23.0022 25.2699 23.0022 24.8972ZM7.06746 24.8972V23.838H6.59148V24.1028C6.43282 23.9049 6.20541 23.7943 5.90924 23.7943C5.29576 23.7943 4.81978 24.2571 4.81978 24.8972C4.81978 25.5373 5.29576 26 5.90924 26C6.22656 26 6.45397 25.8895 6.59148 25.6915V25.9563H7.06746V24.8972ZM5.2984 24.8972C5.2984 24.5219 5.54697 24.2134 5.95684 24.2134C6.34291 24.2134 6.61528 24.5013 6.61528 24.8972C6.61528 25.2725 6.34291 25.581 5.95684 25.581C5.54697 25.5578 5.2984 25.2699 5.2984 24.8972Z\",\n    fill: \"#E5E5E5\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.2959 7.70361H9.3501V20.2242H16.2959V7.70361Z\",\n    fill: \"#FF5A00\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.81252 13.9639C9.81252 11.4201 11.0044 9.16237 12.8333 7.70361C11.4873 6.64175 9.7894 6 7.93735 6C3.54997 6 0 9.56186 0 13.9639C0 18.366 3.54997 21.9278 7.93735 21.9278C9.7894 21.9278 11.4873 21.2861 12.8333 20.2242C11.0018 18.7861 9.81252 16.5077 9.81252 13.9639Z\",\n    fill: \"#EB001B\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M25.6666 13.9639C25.6666 18.366 22.1166 21.9278 17.7292 21.9278C15.8772 21.9278 14.1793 21.2861 12.8333 20.2242C14.6853 18.7629 15.8541 16.5077 15.8541 13.9639C15.8541 11.4201 14.6622 9.16237 12.8333 7.70361C14.1767 6.64175 15.8746 6 17.7267 6C22.1166 6 25.6666 9.58505 25.6666 13.9639Z\",\n    fill: \"#F79E1B\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgMastercardLogo);\nexport default __webpack_public_path__ + \"static/media/Mastercard-logo.6e0f440b508f729659d3eb26763ab12a.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgTelegram(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.96 0.960022C5.89049 0.960022 0.959961 5.89056 0.959961 11.96C0.959961 18.0295 5.89049 22.96 11.96 22.96C18.0294 22.96 22.96 18.0295 22.96 11.96C22.96 5.89056 18.0294 0.960022 11.96 0.960022ZM11.96 1.91654C17.5125 1.91654 22.0034 6.4075 22.0034 11.96C22.0034 17.5125 17.5125 22.0035 11.96 22.0035C6.40743 22.0035 1.91648 17.5125 1.91648 11.96C1.91648 6.4075 6.40743 1.91654 11.96 1.91654ZM16.3063 6.71597C15.9792 6.71597 15.6116 6.79173 15.1817 6.94669C14.514 7.18725 6.66118 10.5215 5.76779 10.9007C5.25701 11.1179 4.30592 11.5218 4.30592 12.485C4.30592 13.1235 4.68005 13.5801 5.41657 13.8432C5.81257 13.9843 6.75309 14.2693 7.29879 14.4195C7.53026 14.4831 7.77625 14.5157 8.02925 14.5157C8.52425 14.5157 9.0224 14.3924 9.41266 14.1748C9.40931 14.2551 9.4115 14.3363 9.42107 14.4176C9.47989 14.9198 9.78955 15.3921 10.2487 15.6815C10.549 15.8709 13.0022 17.5146 13.3686 17.7757C13.8832 18.1435 14.4521 18.3381 15.0126 18.3381C16.0839 18.3381 16.4433 17.2319 16.6165 16.7006C16.8676 15.9292 17.8078 9.65583 17.9139 8.54961C17.9862 7.79157 17.6702 7.16735 17.0686 6.87943C16.8433 6.77087 16.5861 6.71597 16.3063 6.71597ZM16.3063 7.67249C16.4379 7.67249 16.5553 7.69424 16.6548 7.74255C16.881 7.85111 16.9961 8.09313 16.9611 8.459C16.8454 9.66566 15.9075 15.7904 15.7076 16.4045C15.5364 16.9296 15.356 17.3816 15.0126 17.3816C14.6692 17.3816 14.2941 17.2612 13.9244 16.9967C13.5547 16.7327 11.0997 15.0864 10.7587 14.8716C10.4598 14.6832 10.1434 14.2135 10.5887 13.7591C10.9555 13.3851 13.7381 10.6845 13.9758 10.4468C14.1527 10.2693 14.07 10.0554 13.8964 10.0554C13.8366 10.0554 13.765 10.0806 13.6909 10.1413C13.4001 10.379 9.34616 13.0917 8.99512 13.3098C8.76268 13.4542 8.40278 13.5583 8.02925 13.5583C7.86999 13.5583 7.70875 13.5392 7.5538 13.4966C7.01432 13.3479 6.10136 13.0709 5.73883 12.9418C5.39018 12.8174 5.26337 12.6983 5.26337 12.485C5.26337 12.1818 5.69137 11.9725 6.14237 11.7807C6.61871 11.5784 14.8611 8.07819 15.5058 7.84623C15.8043 7.73814 16.0773 7.67249 16.3063 7.67249Z\",\n    fill: \"#E5E5E5\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgTelegram);\nexport default __webpack_public_path__ + \"static/media/telegram.d3af401d799dc71751eaad6682e61435.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgMessenger(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 25,\n    height: 24,\n    viewBox: \"0 0 25 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.3052 0.960022C6.33923 0.960022 1.45996 5.48564 1.45996 11.098C1.45996 14.1667 2.93719 16.8909 5.23223 18.7457V22.96L5.9248 22.5916L9.32868 20.8234C10.2791 21.0776 11.2682 21.236 12.3052 21.236C18.2712 21.236 23.1505 16.7104 23.1505 11.098C23.1505 5.48564 18.2712 0.960022 12.3052 0.960022ZM12.3052 1.90309C17.796 1.90309 22.2074 6.03269 22.2074 11.098C22.2074 16.1633 17.796 20.2929 12.3052 20.2929C11.2848 20.2929 10.2975 20.1456 9.37289 19.8803L9.19606 19.8361L9.03397 19.9245L6.1753 21.4128V18.3184L5.99847 18.1857C3.79921 16.493 2.40303 13.9456 2.40303 11.098C2.40303 6.03269 6.81445 1.90309 12.3052 1.90309ZM11.2296 8.37194L5.55641 14.384L10.6549 11.5253L13.3809 14.4429L18.9804 8.37194L14.0145 11.1569L11.2296 8.37194Z\",\n    fill: \"#E5E5E5\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgMessenger);\nexport default __webpack_public_path__ + \"static/media/messenger.67e0e0fb67122060c49edafc96635e55.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgViber(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.6885 1.44C11.0366 1.44374 10.3827 1.48297 9.72324 1.5633C8.46223 1.71836 7.21242 1.97616 6.01306 2.52727C4.10567 3.40344 2.75311 4.8905 2.3608 7.05197C2.19453 7.96363 2.06002 8.88838 1.98343 9.81872C1.83584 11.6252 1.92738 13.4374 2.43926 15.2177C2.84279 16.6207 3.58632 17.8817 4.88843 18.7C5.43954 19.0456 6.16625 19.2137 6.54549 19.3893C6.65197 19.4398 6.67813 19.4697 6.68373 19.4771C6.68934 19.4827 6.70428 19.4958 6.70242 19.6079C6.68934 20.7512 6.70242 22.9631 6.70242 22.9631L6.70428 23.4395H7.55804L7.69628 23.305C7.69628 23.305 9.86522 21.2183 10.6498 20.3589C10.7918 20.2057 10.8647 20.1198 10.8796 20.1104C10.8927 20.1011 10.8703 20.0955 11.016 20.0918C12.0454 20.0712 13.0729 20.032 14.1004 19.9759C15.4548 19.9012 16.8353 19.7723 18.1636 19.2175C19.32 18.7336 20.2858 17.9434 20.8706 16.759C21.4684 15.5446 21.7878 14.2575 21.9074 12.9255C22.1054 10.708 22.0363 8.48672 21.4236 6.29723C21.063 5.0138 20.3382 3.9284 19.2266 3.16245C17.8965 2.24705 16.3963 1.90331 14.9279 1.68473C14.0705 1.55769 13.2074 1.47363 12.3405 1.44747C12.1238 1.44187 11.9071 1.43813 11.6885 1.44ZM12.3144 2.40397C13.1382 2.42639 13.9621 2.50672 14.7878 2.63002C16.2039 2.84112 17.5396 3.16245 18.6848 3.95081C19.6133 4.58973 20.1924 5.45282 20.5026 6.55317C21.0742 8.60068 21.1471 10.6986 20.9546 12.8414C20.8444 14.0763 20.5511 15.2401 20.0112 16.3368C19.5348 17.3045 18.7913 17.9191 17.7937 18.3357C16.6354 18.8195 15.3763 18.9484 14.0499 19.0213C13.0336 19.0773 12.0155 19.1147 10.9973 19.1353C10.7414 19.1409 10.4911 19.2081 10.3136 19.3389C10.1361 19.4697 10.0558 19.5911 9.94555 19.7107C9.3851 20.3234 8.26794 21.4013 7.65892 21.9917C7.65518 21.278 7.64958 20.415 7.65892 19.6191C7.66265 19.3744 7.60661 19.1241 7.4665 18.926C7.32638 18.728 7.13396 18.6084 6.94901 18.5225C6.40911 18.2722 5.70295 18.0816 5.39657 17.8892C4.32611 17.2167 3.71896 16.2078 3.3584 14.9524C2.88575 13.3103 2.79608 11.6196 2.93619 9.89905C3.01092 9.00607 3.13982 8.11122 3.30235 7.22384C3.64236 5.35381 4.71095 4.17686 6.41098 3.39597C7.48518 2.90277 8.63223 2.65991 9.84093 2.51233C10.6648 2.41145 11.4887 2.37969 12.3144 2.40397ZM12.5161 4.78775C12.122 4.78775 11.739 4.83259 11.3672 4.91479C11.1113 4.97457 10.9488 5.23051 11.0067 5.48831C11.0646 5.74612 11.3224 5.90678 11.5802 5.84887C11.881 5.77975 12.1948 5.74425 12.5161 5.74425C14.8514 5.74425 16.7345 7.62736 16.7345 9.9607C16.7345 10.2839 16.699 10.5977 16.6298 10.9004C16.5719 11.1563 16.7326 11.4141 16.9904 11.472C17.2482 11.53 17.5041 11.3674 17.5621 11.1096C17.6461 10.7397 17.691 10.3568 17.691 9.9607C17.691 7.10988 15.3688 4.78775 12.5161 4.78775ZM7.74485 5.74612C7.66639 5.74238 7.58606 5.74799 7.50199 5.76667C6.63329 5.95909 5.7702 6.58866 5.74591 7.7133C5.7702 7.87022 5.76833 8.03836 5.82625 8.18034C6.11021 8.8753 6.3568 9.59267 6.71176 10.2503C8.43981 13.4448 11.0534 15.6661 14.3843 17.0765C14.7822 17.2447 15.1932 17.2802 15.5949 17.112C16.1479 16.8823 16.6168 16.5273 16.9288 16.0173C17.3566 15.3167 17.3622 14.831 16.6579 14.3135C16.1964 13.9735 15.7425 13.6242 15.2754 13.2916C14.5637 12.7872 13.794 12.6994 13.2634 13.5849C13.2354 13.6298 13.1943 13.6671 13.1588 13.7045C12.886 13.9941 12.5516 14.0651 12.1967 13.9193C10.8497 13.3645 9.80917 12.4696 9.18147 11.1376C8.81157 10.3549 8.91246 9.96257 9.60368 9.44135C9.6728 9.39091 9.73818 9.33674 9.8017 9.27882C10.1043 9.00233 10.1847 8.67354 10.0053 8.30177C9.59994 7.45362 9.06004 6.69702 8.37629 6.04503C8.19134 5.86942 7.98024 5.7592 7.74485 5.74612ZM12.5087 6.2225C12.2976 6.2225 12.0883 6.23932 11.8828 6.27481C11.7091 6.29723 11.5615 6.41306 11.498 6.57559C11.4345 6.73998 11.4662 6.92493 11.5783 7.05944C11.6923 7.19208 11.8716 7.25373 12.0435 7.21637C12.193 7.19208 12.3499 7.179 12.5087 7.179C14.063 7.179 15.3109 8.42694 15.3109 9.98125C15.3109 10.14 15.2978 10.297 15.2736 10.4464C15.2362 10.6183 15.2978 10.7976 15.4305 10.9116C15.565 11.0237 15.7499 11.0554 15.9143 10.9919C16.0769 10.9284 16.1927 10.7808 16.2151 10.6071C16.2506 10.4016 16.2674 10.1924 16.2674 9.98125C16.2674 7.91132 14.5786 6.2225 12.5087 6.2225ZM12.4414 7.65725C12.2695 7.65539 12.1089 7.74506 12.0211 7.89451C11.9351 8.04396 11.9351 8.22704 12.0211 8.3765C12.1089 8.52595 12.2695 8.61562 12.4414 8.61375C13.2391 8.61375 13.8762 9.2508 13.8762 10.0485C13.8743 10.2204 13.964 10.381 14.1134 10.4688C14.2629 10.5548 14.446 10.5548 14.5954 10.4688C14.7449 10.381 14.8345 10.2204 14.8327 10.0485C14.8327 8.73332 13.7566 7.65725 12.4414 7.65725Z\",\n    fill: \"#E5E5E5\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgViber);\nexport default __webpack_public_path__ + \"static/media/viber.977ded90a646102c5e70512cfd0c3393.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useRef } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { ReactComponent as LystvaLogoIMG } from \"../../assets/images/footer/LystvaLogo.svg\";\nimport { ReactComponent as PayPalIMG } from \"../../assets/images/footer/PayPal.svg\";\nimport { ReactComponent as VisaIMG } from \"../../assets/images/footer/Visa_2021.svg\";\nimport { ReactComponent as MastercardIMG } from \"../../assets/images/footer/Mastercard-logo.svg\";\nimport { ReactComponent as TelegramIMG } from \"../../assets/images/footer/telegram.svg\";\nimport { ReactComponent as MessengerIMG } from \"../../assets/images/footer/messenger.svg\";\nimport { ReactComponent as ViberIMG } from \"../../assets/images/footer/viber.svg\";\n\nimport \"../../styles/footer.scss\";\n\nexport default function Footer({ setContactsRef }) {\n  const contactsRef = useRef(null);\n  useEffect(() => {\n    setContactsRef(contactsRef.current);\n  }, [setContactsRef]);\n\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"footer\" ref={contactsRef}>\n      <div className=\"footer__content\">\n        <div className=\"footer__main\">\n          <LystvaLogoIMG className=\"footer__logo\" />\n          <p className=\"footer__first-title-main\">{t(\"footer.main_title\")}</p>\n          <p className=\"footer__second-title-main\">\n            {t(\"footer.main_subtitle\")}\n          </p>\n          <div className=\"footer__pay\">\n            <PayPalIMG />\n            <VisaIMG />\n            <MastercardIMG />\n          </div>\n        </div>\n        <div className=\"footer__information\">\n          <p className=\"footer__title\">{t(\"footer.information.title\")}</p>\n          {t(\"footer.information.links\", { returnObjects: true }).map(\n            (item) => (\n              <p key={item} className=\"footer__subtitle\">\n                {item}\n              </p>\n            )\n          )}\n        </div>\n        <div className=\"footer__franchise\">\n          <p className=\"footer__title\">{t(\"footer.franchise.title\")}</p>\n          {t(\"footer.franchise.links\", { returnObjects: true }).map((item) => (\n            <p key={item} className=\"footer__subtitle\">\n              {item}\n            </p>\n          ))}\n        </div>\n        <div className=\"footer__contacts\">\n          <p className=\"footer__title\">{t(\"footer.contacts.title\")}</p>\n          <p className=\"footer__phone\">{t(\"footer.contacts.phone\")}</p>\n          <p\n            className=\"footer__location\"\n            dangerouslySetInnerHTML={{ __html: t(\"footer.contacts.location\") }}\n          ></p>\n\n          <div className=\"footer__social-media\">\n            <a>\n              <TelegramIMG />\n            </a>\n            <a>\n              <MessengerIMG />\n            </a>\n            <a>\n              <ViberIMG />\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { useRef } from \"react\";\n\nimport Header from \"../../components/Header\";\nimport MainPage from \"../../components/Landing/mainPage\";\nimport Advantages from \"../../components/Landing/advantages\";\nimport CatalogMain from \"../../components/Landing/catalogMain\";\nimport Act from \"../../components/Landing/act\";\nimport Response from \"../../components/Landing/response\";\nimport Footer from \"../../components/Footer\";\n\nimport \"../../styles/landing.scss\";\n\nexport default function Landing() {\n  const catalogRef = useRef(null);\n  const setCatalogRef = (ref) => {\n    catalogRef.current = ref;\n  };\n\n  const reviewRef = useRef(null);\n  const setReviewRef = (ref) => {\n    reviewRef.current = ref;\n  };\n\n  const contactsRef = useRef(null);\n  const setContactsRef = (ref) => {\n    contactsRef.current = ref;\n  };\n\n  const advantagesRef = useRef(null);\n  const setAdvantagesRef = (ref) => {\n    advantagesRef.current = ref;\n  };\n\n  return (\n    <div className=\"landing-container\">\n      <div className=\"landing-container__cover\">\n        <div className=\"landing-container__main\">\n          <Header\n            catalogRef={catalogRef}\n            reviewRef={reviewRef}\n            contactsRef={contactsRef}\n            advantagesRef={advantagesRef}\n          />\n          <MainPage />\n        </div>\n      </div>\n      <div className=\"landing-container__body\">\n        <div className=\"landing-container__blurry-background\"></div>\n        <Advantages setAdvantagesRef={setAdvantagesRef} />\n        <CatalogMain setCatalogRef={setCatalogRef} />\n        <Response setReviewRef={setReviewRef} />\n        <Act />\n        <Footer setContactsRef={setContactsRef} />\n      </div>\n    </div>\n  );\n}\n"],"names":["_path","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgLogo","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","d","ForwardRef","_g","_defs","SvgBasket","clipPath","SvgPhone","_path2","SvgClose","stroke","strokeWidth","SvgCatalog","SvgAdvantages","SvgReview","SvgContact","_path3","SvgBurgerButton","iconComponents","CatalogImage","AdvantagesImage","ReviewImage","ContacsImage","HeaderBurgerNavs","navLinks","t","returnObjects","_jsx","children","className","map","index","icon","text","IconComponent","_jsxs","Header","_ref2","catalogRef","reviewRef","contactsRef","advantagesRef","headerRef","useRef","isOpen","setIsOpen","useState","toggleMenu","document","body","style","overflow","useTranslation","dispatch","useDispatch","quantityInBasket","useSelector","state","changeLanguage","lng","i18n","type","payload","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","_Fragment","CloseImage","onClick","BasketImage","PhoneImage","href","LogoImage","link","elementRef","elem","console","log","current","rect","getBoundingClientRect","offsetHeight","scrollTo","top","pageYOffset","y","behavior","scrollToElement","to","BurgerButtonImage","MainPage","_path4","_path5","_path6","_path7","_path8","_path9","_path10","_path11","_path12","_path13","_path14","_path15","_path16","_path17","_path18","_path19","_circle","SvgPerson","cx","cy","r","SvgBouquet","transform","SvgGeo","SvgDelivery","Advantages","setAdvantagesRef","item","AdvantagesPoint","firstText","secondText","trim","PersonImage","BouquetImage","GeoImage","DeliveryImage","alt","SvgCatalogPagePrev","SvgCatalogPageNext","data","img","BouquetIMG","price","Bouquet2IMG","CatalogMain","setCatalogRef","itemsRef","handleScroll","scrollOffset","currentCard","computedStyle","getComputedStyle","paddingLeft","parseFloat","paddingRight","gridGap","getPropertyValue","columnWidth","offsetWidth","newScrollLeft","scrollLeft","left","PrevIMG","CatalogItem","NextIMG","src","draggable","addInBasket","Act","ResponseItem","username","textWithLineBreaks","split","line","React","Response","setReviewRef","AvatarIMG","SvgLystvaLogo","SvgPayPal","SvgVisa2021","SvgMastercardLogo","SvgTelegram","SvgMessenger","SvgViber","Footer","setContactsRef","LystvaLogoIMG","PayPalIMG","VisaIMG","MastercardIMG","dangerouslySetInnerHTML","__html","TelegramIMG","MessengerIMG","ViberIMG","Landing"],"sourceRoot":""}